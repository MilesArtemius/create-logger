(()=>{var __webpack_modules__={611:()=>{eval("// Can use it while no third-party libraries are included\nfunction children(node) {\n  var nodes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  node.childNodes.forEach(function (value) {\n    nodes.push(value);\n    if (value.hasChildNodes()) children(value, nodes);\n  });\n  return nodes;\n}\n\nRange.prototype._setRangeInNode = function (node, pos) {\n  var position = pos !== undefined ? Math.min(pos, node.textContent.length) : node.textContent.length;\n\n  this._setRangeStartInNode(node, position);\n\n  this.collapse(true);\n};\n\nfunction setRangeAnythingInNode(range, node, pos, start) {\n  if (node.nodeType == Node.TEXT_NODE || !children(node).some(function (value) {\n    if (value.nodeType == Node.TEXT_NODE) {\n      if (value.textContent.length >= pos) {\n        if (start) range.setStart(value, pos);else range.setEnd(value, pos);\n        return true;\n      } else {\n        pos -= value.textContent.length;\n        return false;\n      }\n    } else return false;\n  })) {\n    if (start) range.setStart(node, pos);else range.setEnd(node, pos);\n  }\n}\n\nRange.prototype._setRangeStartInNode = function (node, pos) {\n  setRangeAnythingInNode(this, node, pos, true);\n};\n\nRange.prototype._setRangeEndInNode = function (node, pos) {\n  setRangeAnythingInNode(this, node, pos, false);\n};\n\nfunction nodesInChars(before, parent) {\n  var desc = children(parent);\n  var max_index = before === null ? desc.length : desc.findIndex(function (value) {\n    return value == before;\n  });\n  var node;\n  var node_offset = 0;\n  if (!!before) node = before;else if (desc.length > 0) {\n    node = desc[desc.length - 1];\n    node_offset = node.textContent.length;\n  } else node = parent;\n  return {\n    offset: desc.reduce(function (previous, value, index) {\n      if (index < max_index && value.nodeType == Node.TEXT_NODE) return previous + value.textContent.length;else return previous;\n    }, 0),\n    node: node,\n    node_offset: node_offset\n  };\n}\n\nfunction getRangeAnythingInNode(anchor, off, node) {\n  if (node.contains(anchor)) {\n    if (node == anchor) {\n      if (node.nodeType == Node.TEXT_NODE) return {\n        offset: off,\n        node: node,\n        node_offset: off\n      };else return nodesInChars(off == node.childNodes.length ? null : node.childNodes[off], node);\n    } else {\n      var info = getRangeAnythingInNode(anchor, off, anchor);\n\n      var _nodesInChars = nodesInChars(anchor, node),\n          offset = _nodesInChars.offset;\n\n      return {\n        offset: offset + info.offset,\n        node: info.node,\n        node_offset: info.node_offset\n      };\n    }\n  } else return null;\n}\n\nRange.prototype._getRangeStartInNode = function (node) {\n  return getRangeAnythingInNode(this.startContainer, this.startOffset, node);\n};\n\nRange.prototype._getRangeEndInNode = function (node) {\n  return getRangeAnythingInNode(this.endContainer, this.endOffset, node);\n};\n\nSelection.prototype._getFocusOffsetInNode = function (node) {\n  var range = this.getRangeAt(0);\n  if (this.focusNode == range.startContainer && this.focusOffset == range.startOffset) return range._getRangeStartInNode(node).start;else return range._getRangeEndInNode(node).end;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///611\n")},558:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "html,\\nbody,\\n#base {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0;\\n}\\n.holder {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n}\\n.ins {\\n  cursor: default;\\n  user-select: none;\\n}\\n#base {\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n}\\n#header {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: column;\\n  height: 25%;\\n  background-color: #f1f1f1;\\n}\\n#footer {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  height: 5%;\\n}\\n.for-black {\\n  color: black;\\n}\\n.back-black {\\n  background: black;\\n}\\n.for-red {\\n  color: red;\\n}\\n.back-red {\\n  background: red;\\n}\\n.for-green {\\n  color: green;\\n}\\n.back-green {\\n  background: green;\\n}\\n.for-yellow {\\n  color: yellow;\\n}\\n.back-yellow {\\n  background: yellow;\\n}\\n.for-blue {\\n  color: blue;\\n}\\n.back-blue {\\n  background: blue;\\n}\\n.for-magenta {\\n  color: magenta;\\n}\\n.back-magenta {\\n  background: magenta;\\n}\\n.for-cyan {\\n  color: cyan;\\n}\\n.back-cyan {\\n  background: cyan;\\n}\\n.for-white {\\n  color: white;\\n}\\n.back-white {\\n  background: white;\\n}\\n.sty-bold {\\n  font-weight: 700;\\n}\\n.sty-normal {\\n  font-weight: 400;\\n}\\n.sty-dim {\\n  font-weight: 100;\\n}\\n@keyframes blink {\\n  50% {\\n    color: transparent;\\n  }\\n}\\n.blink {\\n  animation: blink 1s step-end 0s infinite;\\n}\\n.cross {\\n  text-decoration: line-through;\\n}\\n.under {\\n  border-bottom: 2px solid currentColor;\\n}\\n.ita {\\n  font-style: italic;\\n}\\n", "",{"version":3,"sources":["webpack://./styles/main.less","webpack://./styles/formatting.less"],"names":[],"mappings":"AAMA;;;EACI,WAAA;EACA,YAAA;EACA,SAAA;ACHJ;ADMA;EACI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ACJJ;ADSA;EACI,eAAA;EACA,iBAAA;ACPJ;ADYA;EACI,gBAAA;EACA,aAAA;EACA,sBAAA;ACVJ;ADaA;EArBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EAoBA,sBAAA;EACA,WAAA;EACA,yBAAA;ACRJ;ADWA;EA5BI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EA2BA,UAAA;ACNJ;ADrCC;ECKG,YAAA;AAmCJ;ADxCC;ECQG,iBAAA;AAmCJ;AD3CC;ECKG,UAAA;AAyCJ;AD9CC;ECQG,eAAA;AAyCJ;ADjDC;ECKG,YAAA;AA+CJ;ADpDC;ECQG,iBAAA;AA+CJ;ADvDC;ECKG,aAAA;AAqDJ;AD1DC;ECQG,kBAAA;AAqDJ;AD7DC;ECKG,WAAA;AA2DJ;ADhEC;ECQG,gBAAA;AA2DJ;ADnEC;ECKG,cAAA;AAiEJ;ADtEC;ECQG,mBAAA;AAiEJ;ADzEC;ECKG,WAAA;AAuEJ;AD5EC;ECQG,gBAAA;AAuEJ;AD/EC;ECKG,YAAA;AA6EJ;ADlFC;ECQG,iBAAA;AA6EJ;ADrFC;ECeG,gBAAA;AAyEJ;ADxFC;ECeG,gBAAA;AA4EJ;AD3FC;ECeG,gBAAA;AA+EJ;AA3EA;EACE;IAAM,kBAAA;EA8EN;AACF;AA7EA;EACE,wCAAA;AA+EF;AA5EA;EACE,6BAAA;AA8EF;AA3EA;EACE,qCAAA;AA6EF;AA1EA;EACE,kBAAA;AA4EF","sourcesContent":["@bold: 700;\\n@normal: 400;\\n@dim: 100;\\n\\n\\n\\nhtml, body, #base {\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n}\\n\\n.holder {\\n    width: 100%;\\n    margin: 0;\\n    display: flex;\\n    box-sizing: border-box;\\n}\\n\\n\\n\\n.ins {\\n    cursor: default;\\n    user-select: none;\\n}\\n\\n\\n\\n#base {\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#header {\\n    .holder();\\n    flex-direction: column;\\n    height: 25%;\\n    background-color: #f1f1f1;\\n}\\n\\n#footer {\\n    .holder();\\n    height: 5%;\\n}\\n","@import \\"main.less\\";\\n\\n//@colors: black, red, green, yellow, blue, magenta, cyan, white;\\neach(@colors, {\\n  .for-@{value} {\\n    color: @value;\\n  }\\n  .back-@{value} {\\n    background: @value;\\n  }\\n});\\n\\n//@styles: bold - 700, normal - 400, dim  - 100;\\neach(@styles, {\\n  .sty-@{value} {\\n    font-weight: @@value;\\n  }\\n});\\n\\n@keyframes blink {\\n  50% { color: transparent; }\\n}\\n.blink {\\n  animation: blink 1s step-end 0s infinite;\\n}\\n\\n.cross {\\n  text-decoration: line-through;\\n}\\n\\n.under {\\n  border-bottom: 2px solid currentColor;\\n}\\n\\n.ita {\\n  font-style: italic;\\n}\\n\\n// обрамленный, окруженный, надчеркнутый\\n\\n@colors: black,red,green,yellow,blue,magenta,cyan,white;@styles: bold,normal,dim;@def-for: white;@def-back: black;@def-sty: normal;"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///558\n')},6:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "html,\\nbody,\\n#base {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0;\\n}\\n.holder {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n}\\n.ins {\\n  cursor: default;\\n  user-select: none;\\n}\\n#base {\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n}\\n#header {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: column;\\n  height: 25%;\\n  background-color: #f1f1f1;\\n}\\n#footer {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  height: 5%;\\n}\\n", "",{"version":3,"sources":["webpack://./styles/main.less"],"names":[],"mappings":"AAMA;;;EACI,WAAA;EACA,YAAA;EACA,SAAA;AAHJ;AAMA;EACI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;AAJJ;AASA;EACI,eAAA;EACA,iBAAA;AAPJ;AAYA;EACI,gBAAA;EACA,aAAA;EACA,sBAAA;AAVJ;AAaA;EArBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EAoBA,sBAAA;EACA,WAAA;EACA,yBAAA;AARJ;AAWA;EA5BI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EA2BA,UAAA;AANJ","sourcesContent":["@bold: 700;\\n@normal: 400;\\n@dim: 100;\\n\\n\\n\\nhtml, body, #base {\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n}\\n\\n.holder {\\n    width: 100%;\\n    margin: 0;\\n    display: flex;\\n    box-sizing: border-box;\\n}\\n\\n\\n\\n.ins {\\n    cursor: default;\\n    user-select: none;\\n}\\n\\n\\n\\n#base {\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#header {\\n    .holder();\\n    flex-direction: column;\\n    height: 25%;\\n    background-color: #f1f1f1;\\n}\\n\\n#footer {\\n    .holder();\\n    height: 5%;\\n}\\n\\n@colors: black,red,green,yellow,blue,magenta,cyan,white;@styles: bold,normal,dim;@def-for: white;@def-back: black;@def-sty: normal;"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcmVhdGUtbG9nZ2VyLy4vc3R5bGVzL21haW4ubGVzcz85NjQwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNzSDtBQUM3QjtBQUN6Riw4QkFBOEIsbUZBQTJCLENBQUMsd0dBQXFDO0FBQy9GO0FBQ0EsK0RBQStELGdCQUFnQixpQkFBaUIsY0FBYyxHQUFHLFdBQVcsZ0JBQWdCLGNBQWMsa0JBQWtCLDJCQUEyQixHQUFHLFFBQVEsb0JBQW9CLHNCQUFzQixHQUFHLFNBQVMscUJBQXFCLGtCQUFrQiwyQkFBMkIsR0FBRyxXQUFXLGdCQUFnQixjQUFjLGtCQUFrQiwyQkFBMkIsMkJBQTJCLGdCQUFnQiw4QkFBOEIsR0FBRyxXQUFXLGdCQUFnQixjQUFjLGtCQUFrQiwyQkFBMkIsZUFBZSxHQUFHLFNBQVMscUZBQXFGLFVBQVUsVUFBVSxVQUFVLEtBQUssS0FBSyxVQUFVLFVBQVUsVUFBVSxXQUFXLEtBQUssS0FBSyxVQUFVLFdBQVcsS0FBSyxLQUFLLFdBQVcsVUFBVSxXQUFXLEtBQUssS0FBSyxXQUFXLFVBQVUsVUFBVSxXQUFXLFlBQVksVUFBVSxXQUFXLEtBQUssS0FBSyxXQUFXLFVBQVUsVUFBVSxXQUFXLFdBQVcsb0NBQW9DLGVBQWUsWUFBWSwyQkFBMkIsa0JBQWtCLG1CQUFtQixnQkFBZ0IsR0FBRyxhQUFhLGtCQUFrQixnQkFBZ0Isb0JBQW9CLDZCQUE2QixHQUFHLGNBQWMsc0JBQXNCLHdCQUF3QixHQUFHLGVBQWUsdUJBQXVCLG9CQUFvQiw2QkFBNkIsR0FBRyxhQUFhLGdCQUFnQiw2QkFBNkIsa0JBQWtCLGdDQUFnQyxHQUFHLGFBQWEsZ0JBQWdCLGlCQUFpQixHQUFHLDREQUE0RCx5QkFBeUIsZ0JBQWdCLGlCQUFpQixpQkFBaUIsbUJBQW1CO0FBQzNxRDtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImh0bWwsXFxuYm9keSxcXG4jYmFzZSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIG1hcmdpbjogMDtcXG59XFxuLmhvbGRlciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1hcmdpbjogMDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG4uaW5zIHtcXG4gIGN1cnNvcjogZGVmYXVsdDtcXG4gIHVzZXItc2VsZWN0OiBub25lO1xcbn1cXG4jYmFzZSB7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcbiNoZWFkZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW46IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBoZWlnaHQ6IDI1JTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XFxufVxcbiNmb290ZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW46IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGhlaWdodDogNSU7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3N0eWxlcy9tYWluLmxlc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBTUE7OztFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtBQUhKO0FBTUE7RUFDSSxXQUFBO0VBQ0EsU0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtBQUpKO0FBU0E7RUFDSSxlQUFBO0VBQ0EsaUJBQUE7QUFQSjtBQVlBO0VBQ0ksZ0JBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7QUFWSjtBQWFBO0VBckJJLFdBQUE7RUFDQSxTQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBb0JBLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHlCQUFBO0FBUko7QUFXQTtFQTVCSSxXQUFBO0VBQ0EsU0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQTJCQSxVQUFBO0FBTkpcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGJvbGQ6IDcwMDtcXG5Abm9ybWFsOiA0MDA7XFxuQGRpbTogMTAwO1xcblxcblxcblxcbmh0bWwsIGJvZHksICNiYXNlIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG5cXG4uaG9sZGVyIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuXFxuXFxuLmlucyB7XFxuICAgIGN1cnNvcjogZGVmYXVsdDtcXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxufVxcblxcblxcblxcbiNiYXNlIHtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuI2hlYWRlciB7XFxuICAgIC5ob2xkZXIoKTtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgaGVpZ2h0OiAyNSU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XFxufVxcblxcbiNmb290ZXIge1xcbiAgICAuaG9sZGVyKCk7XFxuICAgIGhlaWdodDogNSU7XFxufVxcblxcbkBjb2xvcnM6IGJsYWNrLHJlZCxncmVlbix5ZWxsb3csYmx1ZSxtYWdlbnRhLGN5YW4sd2hpdGU7QHN0eWxlczogYm9sZCxub3JtYWwsZGltO0BkZWYtZm9yOiB3aGl0ZTtAZGVmLWJhY2s6IGJsYWNrO0BkZWYtc3R5OiBub3JtYWw7XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n')},44:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "html,\\nbody,\\n#base {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0;\\n}\\n.holder {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n}\\n.ins {\\n  cursor: default;\\n  user-select: none;\\n}\\n#base {\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n}\\n#header {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: column;\\n  height: 25%;\\n  background-color: #f1f1f1;\\n}\\n#footer {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  height: 5%;\\n}\\n#tab-links {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  min-height: 30%;\\n  border-bottom: 1px solid #ccc;\\n}\\n.tab-link {\\n  background-color: inherit;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 14px 16px;\\n  transition: 0.3s;\\n  user-select: none;\\n}\\n.tab-link:hover {\\n  background-color: #ddd;\\n}\\n.tab-links:active {\\n  background-color: #ccc;\\n}\\n#tab-contents {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  max-height: 70%;\\n  height: 70%;\\n  padding: 0.5rem;\\n}\\n.tab-content {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  height: 100%;\\n  display: none;\\n}\\n#preview-content {\\n  height: 0;\\n}\\n.tile {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\n.tile + .tile {\\n  margin-left: 0.5rem;\\n}\\n.gr {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: row;\\n}\\n.gr-in {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: column;\\n}\\n.gr-in + .gr-in {\\n  margin-top: 0.5rem;\\n}\\n.tile-set-left {\\n  display: flex;\\n  height: 100%;\\n  width: 35%;\\n  justify-content: center;\\n  justify-content: flex-start;\\n}\\n.tile-set-center {\\n  display: flex;\\n  height: 100%;\\n  width: 35%;\\n  justify-content: center;\\n  width: 30%;\\n}\\n.tile-set-right {\\n  display: flex;\\n  height: 100%;\\n  width: 35%;\\n  justify-content: center;\\n  justify-content: flex-end;\\n}\\n.preset_example {\\n  cursor: pointer;\\n  user-select: none;\\n}\\ninput[type=\'radio\'] + label {\\n  position: relative;\\n}\\n", "",{"version":3,"sources":["webpack://./styles/main.less","webpack://./styles/tabs.less"],"names":[],"mappings":"AAMA;;;EACI,WAAA;EACA,YAAA;EACA,SAAA;ACHJ;ADMA;EACI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ACJJ;ADSA;EACI,eAAA;EACA,iBAAA;ACPJ;ADYA;EACI,gBAAA;EACA,aAAA;EACA,sBAAA;ACVJ;ADaA;EArBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EAoBA,sBAAA;EACA,WAAA;EACA,yBAAA;ACRJ;ADWA;EA5BI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EA2BA,UAAA;ACNJ;AAjCA;EDSI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECVF,eAAA;EACA,6BAAA;AAsCF;AAnCA;EACE,yBAAA;EACA,YAAA;EACA,aAAA;EACA,eAAA;EACA,kBAAA;EACA,gBAAA;EACA,iBAAA;AAqCF;AAlCA;EACE,sBAAA;AAoCF;AAjCA;EACE,sBAAA;AAmCF;AA9BA;EDjBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECgBF,eAAA;EACA,WAAA;EACA,eAAA;AAmCF;AAhCA;EDxBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECuBF,YAAA;EACA,aAAA;AAqCF;AAlCA;EACE,SAAA;AAoCF;AA/BA;EACE,aAAA;EACA,sBAAA;EACA,YAAA;AAiCF;AApCA;EAKI,mBAAA;AAkCJ;AA9BA;ED7CI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EC4CF,mBAAA;AAmCF;AAhCA;EDlDI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECiDF,sBAAA;AAqCF;AAvCA;EAII,kBAAA;AAsCJ;AAzBA;EANE,aAAA;EACA,YAAA;EACA,UAAA;EACA,uBAAA;EAKA,2BAAA;AA8BF;AA3BA;EAXE,aAAA;EACA,YAAA;EACA,UAAA;EACA,uBAAA;EAUA,UAAA;AAgCF;AA7BA;EAhBE,aAAA;EACA,YAAA;EACA,UAAA;EACA,uBAAA;EAeA,yBAAA;AAkCF;AA7BA;EACE,eAAA;EACA,iBAAA;AA+BF;AA1BA;EACE,kBAAA;AA4BF","sourcesContent":["@bold: 700;\\n@normal: 400;\\n@dim: 100;\\n\\n\\n\\nhtml, body, #base {\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n}\\n\\n.holder {\\n    width: 100%;\\n    margin: 0;\\n    display: flex;\\n    box-sizing: border-box;\\n}\\n\\n\\n\\n.ins {\\n    cursor: default;\\n    user-select: none;\\n}\\n\\n\\n\\n#base {\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#header {\\n    .holder();\\n    flex-direction: column;\\n    height: 25%;\\n    background-color: #f1f1f1;\\n}\\n\\n#footer {\\n    .holder();\\n    height: 5%;\\n}\\n","@import \\"main.less\\";\\n\\n\\n\\n#tab-links {\\n  .holder();\\n  min-height: 30%;\\n  border-bottom: 1px solid #ccc;\\n}\\n\\n.tab-link {\\n  background-color: inherit;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 14px 16px;\\n  transition: 0.3s;\\n  user-select: none;\\n}\\n\\n.tab-link:hover {\\n  background-color: #ddd;\\n}\\n\\n.tab-links:active {\\n  background-color: #ccc;\\n}\\n\\n\\n\\n#tab-contents {\\n  .holder();\\n  max-height: 70%;\\n  height: 70%;\\n  padding: .5rem;\\n}\\n\\n.tab-content {\\n  .holder();\\n  height: 100%;\\n  display: none;\\n}\\n\\n#preview-content {\\n  height: 0;\\n}\\n\\n\\n\\n.tile {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  + .tile {\\n    margin-left: .5rem;\\n  }\\n}\\n\\n.gr {\\n  .holder();\\n  flex-direction: row;\\n}\\n\\n.gr-in {\\n  .holder();\\n  flex-direction: column;\\n  + .gr-in {\\n    margin-top: .5rem;\\n  }\\n}\\n\\n\\n\\n.tile-set() {\\n  display: flex;\\n  height: 100%;\\n  width: 35%;\\n  justify-content: center;\\n}\\n\\n.tile-set-left {\\n  .tile-set();\\n  justify-content: flex-start;\\n}\\n\\n.tile-set-center {\\n  .tile-set();\\n  width: 30%;\\n}\\n\\n.tile-set-right {\\n  .tile-set();\\n  justify-content: flex-end;\\n}\\n\\n\\n\\n.preset_example {\\n  cursor: pointer;\\n  user-select: none;\\n}\\n\\n\\n\\ninput[type=\'radio\'] + label {\\n  position: relative;\\n}\\n\\n@colors: black,red,green,yellow,blue,magenta,cyan,white;@styles: bold,normal,dim;@def-for: white;@def-back: black;@def-sty: normal;"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///44\n')},432:(module,__webpack_exports__,__webpack_require__)=>{"use strict";eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "html,\\nbody,\\n#base {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0;\\n}\\n.holder {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n}\\n.ins {\\n  cursor: default;\\n  user-select: none;\\n}\\n#base {\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n}\\n#header {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: column;\\n  height: 25%;\\n  background-color: #f1f1f1;\\n}\\n#footer {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  height: 5%;\\n}\\n#terminal {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  min-height: 70%;\\n  flex: 2;\\n  flex-direction: column;\\n  overflow: auto;\\n  font-family: \'Courier New\', monospace;\\n  font-size: small;\\n  background-color: black;\\n  color: white;\\n  font-weight: 400;\\n}\\n.line {\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: row;\\n  height: 1rem;\\n  width: 100%;\\n  margin: 0 0 0.5rem;\\n}\\n.line-number {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  width: 5%;\\n  cursor: pointer;\\n  user-select: none;\\n}\\n.line-content {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  width: 95%;\\n  flex-grow: 1;\\n}\\n:not([class~=chosen]) + [class~=line-content] {\\n  user-select: none;\\n}\\n[contenteditable] {\\n  outline: 0 solid transparent;\\n}\\n", "",{"version":3,"sources":["webpack://./styles/main.less","webpack://./styles/terminal.less"],"names":[],"mappings":"AAMA;;;EACI,WAAA;EACA,YAAA;EACA,SAAA;ACHJ;ADMA;EACI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ACJJ;ADSA;EACI,eAAA;EACA,iBAAA;ACPJ;ADYA;EACI,gBAAA;EACA,aAAA;EACA,sBAAA;ACVJ;ADaA;EArBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EAoBA,sBAAA;EACA,WAAA;EACA,yBAAA;ACRJ;ADWA;EA5BI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EA2BA,UAAA;ACNJ;AAjCA;EDSI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECVF,eAAA;EACA,OAAA;EACA,sBAAA;EACA,cAAA;EAEA,qCAAA;EACA,gBAAA;EAEA,uBAAA;EACA,YAAA;EACA,gBAAA;AAoCF;AAjCA;EDLI,SAAA;EACA,aAAA;EACA,sBAAA;ECKF,mBAAA;EACA,YAAA;EACA,WAAA;EACA,kBAAA;AAqCF;AAlCA;EDdI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECaF,SAAA;EACA,eAAA;EACA,iBAAA;AAuCF;AApCA;EDrBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECoBF,UAAA;EACA,YAAA;AAyCF;AApCA;EACE,iBAAA;AAsCF;AAhCA;EACE,4BAAA;AAkCF","sourcesContent":["@bold: 700;\\n@normal: 400;\\n@dim: 100;\\n\\n\\n\\nhtml, body, #base {\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n}\\n\\n.holder {\\n    width: 100%;\\n    margin: 0;\\n    display: flex;\\n    box-sizing: border-box;\\n}\\n\\n\\n\\n.ins {\\n    cursor: default;\\n    user-select: none;\\n}\\n\\n\\n\\n#base {\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#header {\\n    .holder();\\n    flex-direction: column;\\n    height: 25%;\\n    background-color: #f1f1f1;\\n}\\n\\n#footer {\\n    .holder();\\n    height: 5%;\\n}\\n","@import \\"main.less\\";\\n\\n\\n\\n#terminal {\\n  .holder();\\n  min-height: 70%;\\n  flex: 2;\\n  flex-direction: column;\\n  overflow: auto;\\n\\n  font-family: \'Courier New\', monospace;\\n  font-size: small;\\n\\n  background-color: @def-back;\\n  color: @def-for;\\n  font-weight: @@def-sty;\\n}\\n\\n.line {\\n  .holder();\\n  flex-direction: row;\\n  height: 1rem;\\n  width: 100%;\\n  margin: 0 0 .5rem;\\n}\\n\\n.line-number {\\n  .holder();\\n  width: 5%;\\n  cursor: pointer;\\n  user-select: none;\\n}\\n\\n.line-content {\\n  .holder();\\n  width: 95%;\\n  flex-grow: 1;\\n}\\n\\n\\n\\n:not([class~=chosen])+[class~=line-content] {\\n  user-select: none;\\n  // background: aqua;\\n}\\n\\n\\n\\n[contenteditable] {\\n  outline: 0 solid transparent;\\n}\\n\\n@colors: black,red,green,yellow,blue,magenta,cyan,white;@styles: bold,normal,dim;@def-for: white;@def-back: black;@def-sty: normal;"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///432\n')},645:module=>{"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], " {").concat(content, "}");\n      }\n\n      return content;\n    }).join(\'\');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \'string\') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \'\']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcmVhdGUtbG9nZ2VyLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcz8yNGZiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCOztBQUVoQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw0Q0FBNEMscUJBQXFCO0FBQ2pFOztBQUVBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLHFCQUFxQixpQkFBaUI7QUFDdEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQixxQkFBcUI7QUFDekM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiI2NDUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCAnJ11dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///645\n')},15:module=>{"use strict";eval('\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (typeof btoa === \'function\') {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot || \'\').concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcmVhdGUtbG9nZ2VyLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanM/NzVlOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixpQ0FBaUMsMkhBQTJIOztBQUU1Siw2QkFBNkIsa0tBQWtLOztBQUUvTCxpREFBaUQsZ0JBQWdCLGdFQUFnRSx3REFBd0QsNkRBQTZELHNEQUFzRCxrSEFBa0g7O0FBRTlaLHNDQUFzQyx1REFBdUQsdUNBQXVDLFNBQVMsT0FBTyxrQkFBa0IsRUFBRSxhQUFhOztBQUVyTCx3Q0FBd0MsZ0ZBQWdGLGVBQWUsZUFBZSxnQkFBZ0Isb0JBQW9CLE1BQU0sMENBQTBDLCtCQUErQixhQUFhLHFCQUFxQixtQ0FBbUMsRUFBRSxFQUFFLGNBQWMsV0FBVyxVQUFVLEVBQUUsVUFBVSxNQUFNLGlEQUFpRCxFQUFFLFVBQVUsa0JBQWtCLEVBQUUsRUFBRSxhQUFhOztBQUV2ZSwrQkFBK0Isb0NBQW9DOztBQUVuRTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcInVuZGVmaW5lZFwiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKSB7XG4gIHZhciBfaXRlbSA9IF9zbGljZWRUb0FycmF5KGl0ZW0sIDQpLFxuICAgICAgY29udGVudCA9IF9pdGVtWzFdLFxuICAgICAgY3NzTWFwcGluZyA9IF9pdGVtWzNdO1xuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCAnJykuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n')},379:(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///379\n")}},__webpack_module_cache__={};function __webpack_require__(Q){if(__webpack_module_cache__[Q])return __webpack_module_cache__[Q].exports;var n=__webpack_module_cache__[Q]={id:Q,exports:{}};return __webpack_modules__[Q](n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=Q=>{var n=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(Q,n)=>{for(var F in n)__webpack_require__.o(n,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:n[F]})},__webpack_require__.o=(Q,n)=>Object.prototype.hasOwnProperty.call(Q,n),(()=>{"use strict";eval('\n// EXTERNAL MODULE: ./scripts/lib.ts\nvar lib = __webpack_require__(611);\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(379);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles/formatting.less\nvar formatting = __webpack_require__(558);\n;// CONCATENATED MODULE: ./styles/formatting.less\n\n            \n\nvar options = {};\n\noptions.insert = "head";\noptions.singleton = false;\n\nvar update = injectStylesIntoStyleTag_default()(formatting/* default */.Z, options);\n\n\n\n/* harmony default export */ const styles_formatting = (formatting/* default.locals */.Z.locals || {});\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles/main.less\nvar main = __webpack_require__(6);\n;// CONCATENATED MODULE: ./styles/main.less\n\n            \n\nvar main_options = {};\n\nmain_options.insert = "head";\nmain_options.singleton = false;\n\nvar main_update = injectStylesIntoStyleTag_default()(main/* default */.Z, main_options);\n\n\n\n/* harmony default export */ const styles_main = (main/* default.locals */.Z.locals || {});\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles/tabs.less\nvar tabs = __webpack_require__(44);\n;// CONCATENATED MODULE: ./styles/tabs.less\n\n            \n\nvar tabs_options = {};\n\ntabs_options.insert = "head";\ntabs_options.singleton = false;\n\nvar tabs_update = injectStylesIntoStyleTag_default()(tabs/* default */.Z, tabs_options);\n\n\n\n/* harmony default export */ const styles_tabs = (tabs/* default.locals */.Z.locals || {});\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles/terminal.less\nvar terminal = __webpack_require__(432);\n;// CONCATENATED MODULE: ./styles/terminal.less\n\n            \n\nvar terminal_options = {};\n\nterminal_options.insert = "head";\nterminal_options.singleton = false;\n\nvar terminal_update = injectStylesIntoStyleTag_default()(terminal/* default */.Z, terminal_options);\n\n\n\n/* harmony default export */ const styles_terminal = (terminal/* default.locals */.Z.locals || {});\n;// CONCATENATED MODULE: ./scripts/imports.ts\n // STYLES:\n\n\n\n\n\n;// CONCATENATED MODULE: ./langs/javascript.ts\nfunction construct(language, str) {}\n;// CONCATENATED MODULE: ./core/langs.ts\n\nvar LANGUAGES = {\n  javascript: construct\n};\nvar TYPES = {\n  "int": "Integer",\n  "float": "Floating point number",\n  "char": "Character",\n  string: "String",\n  int_array: "Array of integers",\n  string_array: "Array strings"\n};\nfunction langs_construct(language, str) {\n  return LANGUAGES[language](str);\n}\n;// CONCATENATED MODULE: ./core/babylon.ts\nvar TRANSLATIONS = {\n  english: "English 🇬🇧"\n};\nvar LITERALS = {};\n;// CONCATENATED MODULE: ./core/constants.ts\n\n\nvar SEPARATOR = \'-\';\nvar COLORS = {\n  black: "0",\n  red: "1",\n  green: "2",\n  yellow: "3",\n  blue: "4",\n  magenta: "5",\n  cyan: "6",\n  white: "7"\n};\nvar STYLES = {\n  bold: "1",\n  normal: "22",\n  dim: "2"\n};\nvar DEFAULTS = {\n  "for": "white",\n  back: "black",\n  sty: "normal"\n}; // These below are not exported to PUG or LESS as they are keys for specific classes:\n\nvar PREFIXES = {\n  "for": "3",\n  back: "4",\n  sty: "",\n  blink: "5",\n  cross: "9",\n  under: "4",\n  ita: "3"\n};\nfunction getPrefix(cls) {\n  if (cls.includes(SEPARATOR)) return cls.split(SEPARATOR)[0];else return cls;\n}\nfunction getPostfix(cls) {\n  if (cls.includes(SEPARATOR)) return cls.split(SEPARATOR)[1];else return "";\n}\nfunction multiplePrefix(pref) {\n  return pref === \'for\' || pref === \'back\' || pref === \'sty\';\n}\n\nfunction generateClassCodes() {\n  var codes = {};\n\n  for (var prefix in PREFIXES) {\n    if (prefix === \'for\' || prefix === \'back\') for (var color in COLORS) {\n      codes[prefix + SEPARATOR + color] = PREFIXES[prefix] + COLORS[color];\n    } else if (prefix === \'sty\') for (var styles in STYLES) {\n      codes[prefix + SEPARATOR + styles] = PREFIXES[prefix] + STYLES[styles];\n    } else codes[prefix] = PREFIXES[prefix];\n  }\n\n  return codes;\n}\n\nvar CLASS_CODES = generateClassCodes(); // For passing variables to LESS:\n\nvar LESS_VARS = {\n  colors: Object.keys(COLORS),\n  styles: Object.keys(STYLES)\n};\nObject.keys(DEFAULTS).forEach(function (value) {\n  LESS_VARS["def-" + value] = DEFAULTS[value];\n}); // For passing variables to PUG:\n\nvar PUG_VARS = {\n  colors: Object.keys(COLORS),\n  styles: Object.keys(STYLES),\n  languages: LANGUAGES,\n  types: TYPES,\n  literals: LITERALS,\n  translations: TRANSLATIONS\n};\n;// CONCATENATED MODULE: ./core/utils.ts\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction areArraysEqual(a, b) {\n  if (!a || !b) return false;\n  if (a.length !== b.length) return false;\n  a.sort();\n  b.sort();\n\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n\n  return true;\n}\nfunction getSameElements(a, b) {\n  if (areArraysEqual(a, b)) return a;\n  return _toConsumableArray(a).filter(function (value) {\n    return b.includes(value);\n  });\n}\n;// CONCATENATED MODULE: ./core/converter.ts\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = converter_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction converter_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return converter_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return converter_arrayLikeToArray(o, minLen); }\n\nfunction converter_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\nvar ESCAPE_START = "\\\\033[";\nvar ESCAPE_SEPARATOR = ";";\nvar ESCAPE_END = "m";\nvar ESCAPE_TERMINATE = "0"; //TODO: Reverse for file reading.\n\nfunction classesToStyles(classes) {\n  var styles = [];\n\n  var _iterator = _createForOfIteratorHelper(classes),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var cls = _step.value;\n      if (DEFAULTS[getPrefix(cls)] == getPostfix(cls)) continue;\n      styles.push(CLASS_CODES[cls]);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return styles;\n}\n\nfunction convert(str) {\n  var result = "";\n  var previousClasses = [];\n\n  var _iterator2 = _createForOfIteratorHelper(str),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var entry = _step2.value;\n      var styles = classesToStyles(entry.classes);\n      var interior = "";\n\n      if (!areArraysEqual(previousClasses, styles)) {\n        if (previousClasses.length > 0) interior += ESCAPE_START + ESCAPE_TERMINATE + ESCAPE_END;\n\n        if (styles.length > 0) {\n          interior += ESCAPE_START;\n          interior += styles.join(ESCAPE_SEPARATOR);\n          interior += ESCAPE_END;\n        }\n      }\n\n      interior += entry.value;\n      result += interior;\n      previousClasses = styles;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  if (previousClasses.length > 0) result += ESCAPE_START + ESCAPE_TERMINATE + ESCAPE_END;\n  return result;\n}\n;// CONCATENATED MODULE: ./scripts/cutter.ts\nfunction cutter_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = cutter_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction cutter_toConsumableArray(arr) { return cutter_arrayWithoutHoles(arr) || cutter_iterableToArray(arr) || cutter_unsupportedIterableToArray(arr) || cutter_nonIterableSpread(); }\n\nfunction cutter_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction cutter_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return cutter_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return cutter_arrayLikeToArray(o, minLen); }\n\nfunction cutter_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction cutter_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return cutter_arrayLikeToArray(arr); }\n\nfunction cutter_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\nvar range_backup;\n\nfunction normalize(edges) {\n  var start = {\n    node: find_span_for_place(edges.first),\n    offset: edges.first_offset\n  };\n  var end = {\n    node: find_span_for_place(edges.last),\n    offset: edges.last_offset\n  };\n  if (start.node == end.node) return {\n    first: start.node,\n    first_offset: start.offset,\n    last: end.node,\n    last_offset: end.offset\n  };\n  if (start.offset == start.node.textContent.length && start.node.nextElementSibling != null) start = {\n    node: start.node.nextElementSibling,\n    offset: 0\n  };\n  if (start.node == end.node) return {\n    first: start.node,\n    first_offset: start.offset,\n    last: end.node,\n    last_offset: end.offset\n  };\n  if (end.offset == 0 && end.node.previousElementSibling != null) end = {\n    node: end.node.previousElementSibling,\n    offset: end.node.previousElementSibling.textContent.length\n  };\n  return {\n    first: start.node,\n    first_offset: start.offset,\n    last: end.node,\n    last_offset: end.offset\n  };\n}\n\nfunction parse_range(range, backup) {\n  var parent = get_chosen_line_content();\n\n  var start = range._getRangeStartInNode(parent);\n\n  var end = range._getRangeEndInNode(parent);\n\n  if (backup) range_backup = {\n    start: start.offset,\n    end: end.offset\n  };\n  if (start == end) return {\n    first: find_span_for_place(start.node),\n    last: find_span_for_place(end.node),\n    first_offset: start.node_offset,\n    last_offset: end.node_offset\n  };else return normalize({\n    first: start.node,\n    first_offset: start.node_offset,\n    last: end.node,\n    last_offset: end.node_offset\n  });\n}\n\nfunction restore_range(range) {\n  range._setRangeStartInNode(get_chosen_line_content(), range_backup.start);\n\n  range._setRangeEndInNode(get_chosen_line_content(), range_backup.end);\n} //TODO: for both elements make null "var_name" and "var_type"\n\n\nfunction splitAt(elem, pos, postInsert) {\n  var clone = elem.cloneNode(true);\n\n  if (!postInsert) {\n    clone.textContent = elem.textContent.slice(0, pos);\n    elem.before(clone);\n    elem.textContent = elem.textContent.slice(pos);\n  } else {\n    clone.textContent = elem.textContent.slice(pos);\n    elem.after(clone);\n    elem.textContent = elem.textContent.slice(0, pos);\n  }\n} //TODO: for both elements make null "var_name" and "var_type"\n\n\nfunction joinAround(selected) {\n  if (selected.length == 0) return;\n\n  var around = cutter_toConsumableArray(selected);\n\n  around.unshift(around[0].previousElementSibling);\n  around.push(around[around.length - 1].nextElementSibling);\n  around.forEach(function (value, index) {\n    var friend = around[index - 1];\n    if (!friend || !value) return;\n\n    if (areArraysEqual(cutter_toConsumableArray(value.classList), cutter_toConsumableArray(friend.classList))) {\n      value.textContent = friend.textContent + value.textContent;\n      friend.remove();\n    }\n  });\n}\n\nfunction getSelected(first, last) {\n  if (first == last) return [first];\n  var selected = [];\n  var current = first;\n\n  while (current != last) {\n    selected.push(current);\n    current = current.nextElementSibling;\n  }\n\n  selected.push(last);\n  return selected;\n}\n\nfunction changeClass(elem, name, val) {\n  var new_name = name + SEPARATOR + val;\n\n  var same_class = cutter_toConsumableArray(elem.classList).find(function (value) {\n    return value.startsWith(name);\n  });\n\n  if (!!same_class) elem.classList.replace(same_class, new_name);else elem.classList.add(new_name);\n}\n\nfunction change(selection, format) {\n  if (selection.isCollapsed) return;\n\n  var cuttingStart = function cuttingStart(offset, start) {\n    return offset == 0 || offset == start.textContent.length;\n  };\n\n  var cuttingEnd = function cuttingEnd(offset, end) {\n    return offset == 0 || offset == end.textContent.length;\n  };\n\n  var range = selection.getRangeAt(0);\n\n  var _parse_range = parse_range(range, true),\n      first = _parse_range.first,\n      last = _parse_range.last,\n      first_offset = _parse_range.first_offset,\n      last_offset = _parse_range.last_offset;\n\n  if (first.isSameNode(last)) {\n    var finalOffset = last_offset - first_offset;\n    if (!cuttingStart(first_offset, first)) splitAt(first, first_offset, false);\n    if (!cuttingEnd(finalOffset, last)) splitAt(last, finalOffset, true);\n  } else {\n    if (!cuttingStart(first_offset, first)) splitAt(first, first_offset, false);\n    if (!cuttingEnd(last_offset, last)) splitAt(last, last_offset, true);\n  }\n\n  var selected = getSelected(first, last);\n\n  var _iterator = cutter_createForOfIteratorHelper(selected),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var child = _step.value;\n      if (multiplePrefix(format.type)) changeClass(child, format.type, format.value);else child.classList.toggle(format.type, format.value);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  joinAround(selected);\n  restore_range(range);\n}\nfunction getCommonClasses(selection, single) {\n  if (single) return cutter_toConsumableArray(single.classList);else {\n    var _parse_range2 = parse_range(selection.getRangeAt(0), false),\n        first = _parse_range2.first,\n        last = _parse_range2.last;\n\n    var multiple = getSelected(first, last).map(function (value) {\n      var classes = cutter_toConsumableArray(value.classList);\n\n      var _loop = function _loop(def) {\n        var target = classes.find(function (val) {\n          return getPrefix(val) == def;\n        });\n        if (!target) classes.push(def + SEPARATOR + DEFAULTS[def]);\n      };\n\n      for (var def in DEFAULTS) {\n        _loop(def);\n      }\n\n      return classes;\n    });\n    if (multiple.length == 0) return null;\n    return multiple.reduce(function (prev, value) {\n      return getSameElements(prev, value);\n    }, multiple[0]);\n  }\n}\n;// CONCATENATED MODULE: ./scripts/style_tab.ts\nfunction style_tab_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = style_tab_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction style_tab_toConsumableArray(arr) { return style_tab_arrayWithoutHoles(arr) || style_tab_iterableToArray(arr) || style_tab_unsupportedIterableToArray(arr) || style_tab_nonIterableSpread(); }\n\nfunction style_tab_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction style_tab_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return style_tab_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return style_tab_arrayLikeToArray(o, minLen); }\n\nfunction style_tab_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction style_tab_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return style_tab_arrayLikeToArray(arr); }\n\nfunction style_tab_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\nfunction apply_style(selection, elem) {\n  var name = elem.getAttribute(\'name\');\n  if (elem.getAttribute(\'type\') == \'checkbox\') change(selection, {\n    type: name,\n    value: elem.checked\n  });else change(selection, {\n    type: name,\n    value: elem.value\n  });\n}\n\nfunction apply_styles(selection, elem) {}\n\ndocument.getElementById(\'style-content\').onclick = function (event) {\n  var target = event.target;\n\n  if (target.classList.contains(\'term-changer\') || target.classList.contains(\'preset_button\')) {\n    var selection = document.getSelection();\n\n    if (selection.rangeCount > 0) {\n      if (!selection_in_place(selection)) return;\n      if (target.classList.contains(\'term-changer\')) apply_style(selection, target);else apply_styles(selection, target);\n    }\n  }\n};\n\nfunction reflect_selection(selection, single) {\n  var classes = getCommonClasses(selection, single);\n  if (classes) set_term_changers(classes);else drop_term_changers();\n}\n\nvar term_changers = style_tab_toConsumableArray(document.getElementsByClassName(\'term-changer\'));\n\nfunction drop_term_changers() {\n  document.getElementById(\'style-content\').reset();\n}\nfunction set_term_changers(classes) {\n  drop_term_changers();\n\n  var _iterator = style_tab_createForOfIteratorHelper(classes),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var cls = _step.value;\n\n      var term_changer = style_tab_toConsumableArray(term_changers).filter(function (value) {\n        return value.getAttribute(\'name\') == getPrefix(cls);\n      });\n\n      if (term_changer.length == 1) {\n        if (term_changer[0].getAttribute(\'type\') == \'checkbox\') term_changer[0].checked = true;else term_changer[0].value = getPostfix(cls);\n      } else term_changer.find(function (value) {\n        return value.value == getPostfix(cls);\n      }).checked = true;\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n;// CONCATENATED MODULE: ./scripts/terminal.ts\nfunction terminal_toConsumableArray(arr) { return terminal_arrayWithoutHoles(arr) || terminal_iterableToArray(arr) || terminal_unsupportedIterableToArray(arr) || terminal_nonIterableSpread(); }\n\nfunction terminal_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction terminal_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction terminal_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return terminal_arrayLikeToArray(arr); }\n\nfunction terminal_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = terminal_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction terminal_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return terminal_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return terminal_arrayLikeToArray(o, minLen); }\n\nfunction terminal_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\nvar terminal_terminal = document.getElementById(\'terminal\');\nvar editable = true;\nvar editableHTML;\n\nterminal_terminal.onkeydown = function (event) {\n  var selection = document.getSelection();\n  if (selection.rangeCount == 0) return;\n\n  if (event.key === \'Enter\') {\n    event.preventDefault();\n    choose_line(create_line(get_chosen_line()));\n  } else if (event.key == \'Backspace\') {\n    if (selection.isCollapsed) {\n      var range = selection.getRangeAt(0);\n      var chosen_children = get_chosen_line_content().children;\n\n      if (range.startContainer.textContent == \'\' && chosen_children.length == 1) {\n        if (chosen_children[0].classList.length != 0) {\n          chosen_children[0].className = \'\';\n          reflect_selection(selection);\n        }\n\n        event.preventDefault();\n      }\n    } else event.preventDefault();\n  } else if (event.key == \'ArrowUp\' || event.key == \'ArrowDown\') {\n    var chosen = get_chosen_line();\n    var target = event.key == \'ArrowUp\' ? chosen.previousElementSibling : chosen.nextElementSibling;\n    choose_line(target, selection._getFocusOffsetInNode(chosen) - 1);\n    event.preventDefault();\n  }\n};\n\nfunction disableAndClear() {\n  var line_contents = document.getElementsByClassName(\'line-content\');\n\n  var _iterator = terminal_createForOfIteratorHelper(line_contents),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var content = _step.value;\n      content.setAttribute(\'contenteditable\', \'false\');\n\n      var _iterator3 = terminal_createForOfIteratorHelper(content.children),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var span = _step3.value;\n          span.setAttribute(\'contenteditable\', \'false\');\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var line_numbers = document.getElementsByClassName(\'line-number\');\n\n  var _iterator2 = terminal_createForOfIteratorHelper(line_numbers),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var number = _step2.value;\n      number.classList.remove(\'chosen\');\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\n\nfunction choose_line(line, pos) {\n  if (!line || !line.classList.contains(\'line\') || line.children.length != 2) return;\n  var line_number = line.firstElementChild;\n  var line_content = line.lastElementChild;\n  disableAndClear();\n  line_content.setAttribute(\'contenteditable\', \'true\');\n\n  var _iterator4 = terminal_createForOfIteratorHelper(line_content.children),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var child = _step4.value;\n      child.setAttribute(\'contenteditable\', \'true\');\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  line_number.classList.add(\'chosen\');\n  var range = document.createRange();\n\n  range._setRangeInNode(line_content, pos);\n\n  var sel = document.getSelection();\n  sel.removeAllRanges();\n  sel.addRange(range);\n}\n\nfunction create_line() {\n  var after = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var before = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var line = document.createElement(\'div\');\n  line.classList.add(\'line\');\n  var line_number = document.createElement(\'div\');\n  line_number.classList.add(\'line-number\');\n  line_number.innerHTML = String(document.getElementsByClassName(\'line\').length);\n  var line_content = document.createElement(\'div\');\n  line_content.classList.add(\'line-content\');\n  line_content.appendChild(document.createElement(\'span\'));\n  line.append(line_number, line_content);\n  if (!!after) after.after(line);\n  if (!!before) before.before(line);\n  return line;\n}\n\nterminal_terminal.onclick = function (event) {\n  var target = event.target;\n  if (!target.parentElement.classList.contains(\'line\') || !editable) return;\n  if (target.id === \'line-adder\') choose_line(create_line(null, target.parentElement));else if (target.classList.contains(\'line-number\')) choose_line(target.parentElement);\n};\n\nfunction htmlToEntries(children) {\n  var entries = [];\n\n  var _iterator5 = terminal_createForOfIteratorHelper(children),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var child = _step5.value;\n      entries.push({\n        classes: terminal_toConsumableArray(child.classList),\n        value: child.textContent\n      });\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  return entries;\n}\n\nfunction switchMode(edit) {\n  var line_contents = document.getElementsByClassName(\'line-content\');\n  var line_numbers = document.getElementsByClassName(\'line-number\');\n\n  if (editable && !edit) {\n    disableAndClear();\n    editableHTML = [];\n\n    var _iterator6 = terminal_createForOfIteratorHelper(line_contents),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var content = _step6.value;\n        editableHTML.push(content.innerHTML);\n        content.innerHTML = convert(htmlToEntries(content.children));\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n\n    var _iterator7 = terminal_createForOfIteratorHelper(line_contents),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var _content = _step7.value;\n        _content.style.userSelect = \'auto\';\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    var _iterator8 = terminal_createForOfIteratorHelper(line_numbers),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var number = _step8.value;\n        number.style.cursor = \'default\';\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    document.getElementById(\'line-adder\').parentElement.style.display = \'none\';\n  } else if (!editable && edit) {\n    var _iterator9 = terminal_createForOfIteratorHelper(line_contents),\n        _step9;\n\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var _content2 = _step9.value;\n        _content2.innerHTML = editableHTML.shift();\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n\n    var _iterator10 = terminal_createForOfIteratorHelper(line_contents),\n        _step10;\n\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var _content3 = _step10.value;\n        _content3.style.userSelect = \'\';\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n\n    var _iterator11 = terminal_createForOfIteratorHelper(line_numbers),\n        _step11;\n\n    try {\n      for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n        var _number = _step11.value;\n        _number.style.cursor = \'\';\n      }\n    } catch (err) {\n      _iterator11.e(err);\n    } finally {\n      _iterator11.f();\n    }\n\n    document.getElementById(\'line-adder\').parentElement.style.display = \'\';\n  } else if (!editable && !edit) {\n    var _iterator12 = terminal_createForOfIteratorHelper(line_contents),\n        _step12;\n\n    try {\n      for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n        var _content4 = _step12.value;\n        _content4.innerHTML = "";\n      }\n    } catch (err) {\n      _iterator12.e(err);\n    } finally {\n      _iterator12.f();\n    }\n  }\n\n  editable = edit;\n}\n\nfunction get_chosen_line() {\n  return document.getElementsByClassName(\'chosen\')[0].parentElement;\n}\n\nfunction get_chosen_line_content() {\n  return get_chosen_line().lastElementChild;\n}\nfunction selection_in_place(selection) {\n  var selectionParent = selection.getRangeAt(0).commonAncestorContainer;\n  return get_chosen_line_content().contains(selectionParent);\n}\nfunction find_span_for_place(node) {\n  if (node.nodeType == Node.TEXT_NODE) return node.parentElement;\n  if (node.nodeName != \'SPAN\') throw new DOMException("Selected wrong element: " + node.nodeName);\n  return node;\n}\n;// CONCATENATED MODULE: ./scripts/tabs.ts\nfunction tabs_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = tabs_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction tabs_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return tabs_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return tabs_arrayLikeToArray(o, minLen); }\n\nfunction tabs_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\nvar active_tab;\nfunction open_tab(tab_link, tab_content) {\n  var tab_contents = document.getElementsByClassName(\'tab-content\');\n\n  var _iterator = tabs_createForOfIteratorHelper(tab_contents),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var content = _step.value;\n      content.style.display = \'none\';\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var tab_links = document.getElementsByClassName(\'tab-link\');\n\n  var _iterator2 = tabs_createForOfIteratorHelper(tab_links),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var link = _step2.value;\n      link.classList.remove(\'active\');\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  document.getElementById(tab_content).style.display = \'flex\';\n  document.getElementById(tab_link).classList.add(\'active\');\n  active_tab = tab_content;\n}\n\ndocument.getElementById(\'tab-links\').onclick = function (event) {\n  var target = event.target;\n\n  if (target.classList.contains(\'tab-link\')) {\n    var tab_contents = document.getElementById(\'tab-contents\');\n    var header = document.getElementById(\'header\');\n    open_tab(target.id, target.id.replace(\'tab\', \'content\'));\n\n    if (target.classList.contains(\'collapsing\')) {\n      tab_contents.style.display = \'none\';\n      header.style.height = \'auto\';\n      switchMode(false);\n    } else {\n      tab_contents.style.display = \'\';\n      header.style.height = \'\';\n      switchMode(true);\n    }\n  }\n};\n;// CONCATENATED MODULE: ./scripts/main.ts\n\n\n\n\n\nwindow.onload = function () {\n  open_tab(\'style-tab\', \'style-content\');\n  choose_line(terminal_terminal.firstElementChild);\n};\n\ndocument.ondragstart = function (event) {\n  event.preventDefault();\n  return false;\n};\n\ndocument.ondrop = function (event) {\n  event.preventDefault();\n  return false;\n};\n\ndocument.onselectionchange = function () {\n  var selection = document.getSelection();\n  if (!editable || !selection_in_place(selection)) return;\n  reflect_selection(selection);\n};\n\ndocument.oncopy = function (event) {\n  var selection = document.getSelection();\n\n  if (!!selection) {\n    var str = document.getSelection().toString();\n    var refined = str.replace(/\\r?\\n|\\r/g, "").replace(/\\u00a0/g, " ");\n    event.clipboardData.setData(\'text/plain\', refined);\n    event.preventDefault();\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcmVhdGUtbG9nZ2VyLy4vc3R5bGVzL2Zvcm1hdHRpbmcubGVzcz81NDBmIiwid2VicGFjazovL2NyZWF0ZS1sb2dnZXIvLi9zdHlsZXMvbWFpbi5sZXNzPzQ0NGIiLCJ3ZWJwYWNrOi8vY3JlYXRlLWxvZ2dlci8uL3N0eWxlcy90YWJzLmxlc3M/NmUzZCIsIndlYnBhY2s6Ly9jcmVhdGUtbG9nZ2VyLy4vc3R5bGVzL3Rlcm1pbmFsLmxlc3M/MDNjNCIsIndlYnBhY2s6Ly9jcmVhdGUtbG9nZ2VyLy4vc2NyaXB0cy9pbXBvcnRzLnRzPzE2NmEiLCJ3ZWJwYWNrOi8vY3JlYXRlLWxvZ2dlci8uL2xhbmdzL2phdmFzY3JpcHQudHM/ODYxNiIsIndlYnBhY2s6Ly9jcmVhdGUtbG9nZ2VyLy4vY29yZS9sYW5ncy50cz9hZDNjIiwid2VicGFjazovL2NyZWF0ZS1sb2dnZXIvLi9jb3JlL2JhYnlsb24udHM/NTVmZiIsIndlYnBhY2s6Ly9jcmVhdGUtbG9nZ2VyLy4vY29yZS9jb25zdGFudHMudHM/NTg2MiIsIndlYnBhY2s6Ly9jcmVhdGUtbG9nZ2VyLy4vY29yZS91dGlscy50cz8wOWYxIiwid2VicGFjazovL2NyZWF0ZS1sb2dnZXIvLi9jb3JlL2NvbnZlcnRlci50cz9iMGNiIiwid2VicGFjazovL2NyZWF0ZS1sb2dnZXIvLi9zY3JpcHRzL2N1dHRlci50cz80YzM1Iiwid2VicGFjazovL2NyZWF0ZS1sb2dnZXIvLi9zY3JpcHRzL3N0eWxlX3RhYi50cz9mYjY0Iiwid2VicGFjazovL2NyZWF0ZS1sb2dnZXIvLi9zY3JpcHRzL3Rlcm1pbmFsLnRzPzAxOWIiLCJ3ZWJwYWNrOi8vY3JlYXRlLWxvZ2dlci8uL3NjcmlwdHMvdGFicy50cz82NmNhIiwid2VicGFjazovL2NyZWF0ZS1sb2dnZXIvLi9zY3JpcHRzL21haW4udHM/MTNiNyJdLCJuYW1lcyI6WyJjb25zdHJ1Y3QiLCJsYW5ndWFnZSIsInN0ciIsIkxBTkdVQUdFUyIsImphdmFzY3JpcHQiLCJUWVBFUyIsInN0cmluZyIsImludF9hcnJheSIsInN0cmluZ19hcnJheSIsIlRSQU5TTEFUSU9OUyIsImVuZ2xpc2giLCJMSVRFUkFMUyIsIlNFUEFSQVRPUiIsIkNPTE9SUyIsImJsYWNrIiwicmVkIiwiZ3JlZW4iLCJ5ZWxsb3ciLCJibHVlIiwibWFnZW50YSIsImN5YW4iLCJ3aGl0ZSIsIlNUWUxFUyIsImJvbGQiLCJub3JtYWwiLCJkaW0iLCJERUZBVUxUUyIsImJhY2siLCJzdHkiLCJQUkVGSVhFUyIsImJsaW5rIiwiY3Jvc3MiLCJ1bmRlciIsIml0YSIsImdldFByZWZpeCIsImNscyIsImluY2x1ZGVzIiwic3BsaXQiLCJnZXRQb3N0Zml4IiwibXVsdGlwbGVQcmVmaXgiLCJwcmVmIiwiZ2VuZXJhdGVDbGFzc0NvZGVzIiwiY29kZXMiLCJwcmVmaXgiLCJjb2xvciIsInN0eWxlcyIsIkNMQVNTX0NPREVTIiwiTEVTU19WQVJTIiwiY29sb3JzIiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJ2YWx1ZSIsIlBVR19WQVJTIiwibGFuZ3VhZ2VzIiwidHlwZXMiLCJsaXRlcmFscyIsInRyYW5zbGF0aW9ucyIsImFyZUFycmF5c0VxdWFsIiwiYSIsImIiLCJsZW5ndGgiLCJzb3J0IiwiaSIsImdldFNhbWVFbGVtZW50cyIsImZpbHRlciIsIkVTQ0FQRV9TVEFSVCIsIkVTQ0FQRV9TRVBBUkFUT1IiLCJFU0NBUEVfRU5EIiwiRVNDQVBFX1RFUk1JTkFURSIsImNsYXNzZXNUb1N0eWxlcyIsImNsYXNzZXMiLCJwdXNoIiwiY29udmVydCIsInJlc3VsdCIsInByZXZpb3VzQ2xhc3NlcyIsImVudHJ5IiwiaW50ZXJpb3IiLCJqb2luIiwicmFuZ2VfYmFja3VwIiwibm9ybWFsaXplIiwiZWRnZXMiLCJzdGFydCIsIm5vZGUiLCJmaW5kX3NwYW5fZm9yX3BsYWNlIiwiZmlyc3QiLCJvZmZzZXQiLCJmaXJzdF9vZmZzZXQiLCJlbmQiLCJsYXN0IiwibGFzdF9vZmZzZXQiLCJ0ZXh0Q29udGVudCIsIm5leHRFbGVtZW50U2libGluZyIsInByZXZpb3VzRWxlbWVudFNpYmxpbmciLCJwYXJzZV9yYW5nZSIsInJhbmdlIiwiYmFja3VwIiwicGFyZW50IiwiZ2V0X2Nob3Nlbl9saW5lX2NvbnRlbnQiLCJfZ2V0UmFuZ2VTdGFydEluTm9kZSIsIl9nZXRSYW5nZUVuZEluTm9kZSIsIm5vZGVfb2Zmc2V0IiwicmVzdG9yZV9yYW5nZSIsIl9zZXRSYW5nZVN0YXJ0SW5Ob2RlIiwiX3NldFJhbmdlRW5kSW5Ob2RlIiwic3BsaXRBdCIsImVsZW0iLCJwb3MiLCJwb3N0SW5zZXJ0IiwiY2xvbmUiLCJjbG9uZU5vZGUiLCJzbGljZSIsImJlZm9yZSIsImFmdGVyIiwiam9pbkFyb3VuZCIsInNlbGVjdGVkIiwiYXJvdW5kIiwidW5zaGlmdCIsImluZGV4IiwiZnJpZW5kIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiZ2V0U2VsZWN0ZWQiLCJjdXJyZW50IiwiY2hhbmdlQ2xhc3MiLCJuYW1lIiwidmFsIiwibmV3X25hbWUiLCJzYW1lX2NsYXNzIiwiZmluZCIsInN0YXJ0c1dpdGgiLCJyZXBsYWNlIiwiYWRkIiwiY2hhbmdlIiwic2VsZWN0aW9uIiwiZm9ybWF0IiwiaXNDb2xsYXBzZWQiLCJjdXR0aW5nU3RhcnQiLCJjdXR0aW5nRW5kIiwiZ2V0UmFuZ2VBdCIsImlzU2FtZU5vZGUiLCJmaW5hbE9mZnNldCIsImNoaWxkIiwidHlwZSIsInRvZ2dsZSIsImdldENvbW1vbkNsYXNzZXMiLCJzaW5nbGUiLCJtdWx0aXBsZSIsIm1hcCIsImRlZiIsInRhcmdldCIsInJlZHVjZSIsInByZXYiLCJhcHBseV9zdHlsZSIsImdldEF0dHJpYnV0ZSIsImNoZWNrZWQiLCJhcHBseV9zdHlsZXMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwib25jbGljayIsImV2ZW50IiwiY29udGFpbnMiLCJnZXRTZWxlY3Rpb24iLCJyYW5nZUNvdW50Iiwic2VsZWN0aW9uX2luX3BsYWNlIiwicmVmbGVjdF9zZWxlY3Rpb24iLCJzZXRfdGVybV9jaGFuZ2VycyIsImRyb3BfdGVybV9jaGFuZ2VycyIsInRlcm1fY2hhbmdlcnMiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwicmVzZXQiLCJ0ZXJtX2NoYW5nZXIiLCJ0ZXJtaW5hbCIsImVkaXRhYmxlIiwiZWRpdGFibGVIVE1MIiwib25rZXlkb3duIiwia2V5IiwicHJldmVudERlZmF1bHQiLCJjaG9vc2VfbGluZSIsImNyZWF0ZV9saW5lIiwiZ2V0X2Nob3Nlbl9saW5lIiwiY2hvc2VuX2NoaWxkcmVuIiwiY2hpbGRyZW4iLCJzdGFydENvbnRhaW5lciIsImNsYXNzTmFtZSIsImNob3NlbiIsIl9nZXRGb2N1c09mZnNldEluTm9kZSIsImRpc2FibGVBbmRDbGVhciIsImxpbmVfY29udGVudHMiLCJjb250ZW50Iiwic2V0QXR0cmlidXRlIiwic3BhbiIsImxpbmVfbnVtYmVycyIsIm51bWJlciIsImxpbmUiLCJsaW5lX251bWJlciIsImZpcnN0RWxlbWVudENoaWxkIiwibGluZV9jb250ZW50IiwibGFzdEVsZW1lbnRDaGlsZCIsImNyZWF0ZVJhbmdlIiwiX3NldFJhbmdlSW5Ob2RlIiwic2VsIiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJjcmVhdGVFbGVtZW50IiwiaW5uZXJIVE1MIiwiU3RyaW5nIiwiYXBwZW5kQ2hpbGQiLCJhcHBlbmQiLCJwYXJlbnRFbGVtZW50IiwiaWQiLCJodG1sVG9FbnRyaWVzIiwiZW50cmllcyIsInN3aXRjaE1vZGUiLCJlZGl0Iiwic3R5bGUiLCJ1c2VyU2VsZWN0IiwiY3Vyc29yIiwiZGlzcGxheSIsInNoaWZ0Iiwic2VsZWN0aW9uUGFyZW50IiwiY29tbW9uQW5jZXN0b3JDb250YWluZXIiLCJub2RlVHlwZSIsIk5vZGUiLCJURVhUX05PREUiLCJub2RlTmFtZSIsIkRPTUV4Y2VwdGlvbiIsImFjdGl2ZV90YWIiLCJvcGVuX3RhYiIsInRhYl9saW5rIiwidGFiX2NvbnRlbnQiLCJ0YWJfY29udGVudHMiLCJ0YWJfbGlua3MiLCJsaW5rIiwiaGVhZGVyIiwiaGVpZ2h0Iiwid2luZG93Iiwib25sb2FkIiwib25kcmFnc3RhcnQiLCJvbmRyb3AiLCJvbnNlbGVjdGlvbmNoYW5nZSIsIm9uY29weSIsInRvU3RyaW5nIiwicmVmaW5lZCIsImNsaXBib2FyZERhdGEiLCJzZXREYXRhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBeUY7QUFDekYsWUFBaUs7O0FBRWpLOztBQUVBO0FBQ0E7O0FBRUEsYUFBYSxrQ0FBRyxDQUFDLHlCQUFPOzs7O0FBSXhCLHdEQUFlLHVDQUFjLE1BQU0sRTs7OztBQ1pzRDtBQUN6RixZQUEySjs7QUFFM0osSUFBSSxZQUFPOztBQUVYLFlBQU87QUFDUCxZQUFPOztBQUVQLElBQUksV0FBTSxHQUFHLGtDQUFHLENBQUMsbUJBQU8sRUFBRSxZQUFPOzs7O0FBSWpDLGtEQUFlLGlDQUFjLE1BQU0sRTs7OztBQ1pzRDtBQUN6RixZQUEySjs7QUFFM0osSUFBSSxZQUFPOztBQUVYLFlBQU87QUFDUCxZQUFPOztBQUVQLElBQUksV0FBTSxHQUFHLGtDQUFHLENBQUMsbUJBQU8sRUFBRSxZQUFPOzs7O0FBSWpDLGtEQUFlLGlDQUFjLE1BQU0sRTs7OztBQ1pzRDtBQUN6RixZQUErSjs7QUFFL0osSUFBSSxnQkFBTzs7QUFFWCxnQkFBTztBQUNQLGdCQUFPOztBQUVQLElBQUksZUFBTSxHQUFHLGtDQUFHLENBQUMsdUJBQU8sRUFBRSxnQkFBTzs7OztBQUlqQyxzREFBZSxxQ0FBYyxNQUFNLEU7O0NDVm5DOztBQUNBO0FBQ0E7QUFDQTs7O0FDSE8sU0FBU0EsU0FBVCxDQUFvQkMsUUFBcEIsRUFBc0NDLEdBQXRDLEVBQXFELENBRTNELEM7O0FDSkQ7QUFFTyxJQUFNQyxTQUFTLEdBQUc7QUFDckJDLFlBQVUsRUFBRUEsU0FBb0JKO0FBRFgsQ0FBbEI7QUFJQSxJQUFNSyxLQUFLLEdBQUc7QUFDakIsU0FBSyxTQURZO0FBRWpCLFdBQU8sdUJBRlU7QUFHakIsVUFBTSxXQUhXO0FBSWpCQyxRQUFNLEVBQUUsUUFKUztBQUtqQkMs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ImltcG9ydCBhcGkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMl0hLi9mb3JtYXR0aW5nLmxlc3NcIjtcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgZGVmYXVsdCBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJpbXBvcnQgYXBpIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICAgICAgICBpbXBvcnQgY29udGVudCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi9ub2RlX21vZHVsZXMvbGVzcy1sb2FkZXIvZGlzdC9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0udXNlWzJdIS4vbWFpbi5sZXNzXCI7XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgY29udGVudC5sb2NhbHMgfHwge307IiwiaW1wb3J0IGFwaSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgICAgICAgaW1wb3J0IGNvbnRlbnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vbm9kZV9tb2R1bGVzL2xlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLnVzZVsyXSEuL3RhYnMubGVzc1wiO1xuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IFwiaGVhZFwiO1xub3B0aW9ucy5zaW5nbGV0b24gPSBmYWxzZTtcblxudmFyIHVwZGF0ZSA9IGFwaShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCBkZWZhdWx0IGNvbnRlbnQubG9jYWxzIHx8IHt9OyIsImltcG9ydCBhcGkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uL25vZGVfbW9kdWxlcy9sZXNzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS51c2VbMl0hLi90ZXJtaW5hbC5sZXNzXCI7XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgY29udGVudC5sb2NhbHMgfHwge307IiwiaW1wb3J0ICcuL2xpYidcblxuLy8gU1RZTEVTOlxuaW1wb3J0ICcuLi9zdHlsZXMvZm9ybWF0dGluZy5sZXNzJ1xuaW1wb3J0ICcuLi9zdHlsZXMvbWFpbi5sZXNzJ1xuaW1wb3J0ICcuLi9zdHlsZXMvdGFicy5sZXNzJ1xuaW1wb3J0ICcuLi9zdHlsZXMvdGVybWluYWwubGVzcydcbiIsImltcG9ydCB7IFBhcnQgfSBmcm9tIFwiLi4vY29yZS9sYW5nc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gY29uc3RydWN0IChsYW5ndWFnZTogc3RyaW5nLCBzdHI6IFBhcnRbXVtdKSB7XG5cbn1cbiIsImltcG9ydCAqIGFzIGphdmFzY3JpcHQgZnJvbSBcIi4uL2xhbmdzL2phdmFzY3JpcHRcIlxuXG5leHBvcnQgY29uc3QgTEFOR1VBR0VTID0ge1xuICAgIGphdmFzY3JpcHQ6IGphdmFzY3JpcHQuY29uc3RydWN0XG59XG5cbmV4cG9ydCBjb25zdCBUWVBFUyA9IHtcbiAgICBpbnQ6IFwiSW50ZWdlclwiLFxuICAgIGZsb2F0OiBcIkZsb2F0aW5nIHBvaW50IG51bWJlclwiLFxuICAgIGNoYXI6IFwiQ2hhcmFjdGVyXCIsXG4gICAgc3RyaW5nOiBcIlN0cmluZ1wiLFxuICAgIGludF9hcnJheTogXCJBcnJheSBvZiBpbnRlZ2Vyc1wiLFxuICAgIHN0cmluZ19hcnJheTogXCJBcnJheSBzdHJpbmdzXCJcbn1cblxuXG5cbmV4cG9ydCBpbnRlcmZhY2UgUGFydCB7XG4gICAgY2xhc3Nlczogc3RyaW5nW107XG4gICAgdmFsdWU6IHN0cmluZztcbiAgICB2YXJfbmFtZT86IHN0cmluZztcbiAgICB0eXBlPzogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29uc3RydWN0IChsYW5ndWFnZTogc3RyaW5nLCBzdHI6IFBhcnRbXVtdKTogc3RyaW5nIHtcbiAgICByZXR1cm4gTEFOR1VBR0VTW2xhbmd1YWdlXShzdHIpO1xufVxuIiwiZXhwb3J0IGNvbnN0IFRSQU5TTEFUSU9OUyA9IHtcbiAgICBlbmdsaXNoOiBcIkVuZ2xpc2gg8J+HrPCfh6dcIlxufVxuXG5leHBvcnQgY29uc3QgTElURVJBTFMgPSB7XG59XG4iLCJpbXBvcnQgeyBMQU5HVUFHRVMsIFRZUEVTIH0gZnJvbSBcIi4vbGFuZ3NcIlxuaW1wb3J0IHsgTElURVJBTFMsIFRSQU5TTEFUSU9OUyB9IGZyb20gXCIuL2JhYnlsb25cIjtcblxuZXhwb3J0IGNvbnN0IFNFUEFSQVRPUiA9ICctJztcblxuZXhwb3J0IGNvbnN0IENPTE9SUyA9IHtcbiAgICBibGFjazogXCIwXCIsXG4gICAgcmVkOiBcIjFcIixcbiAgICBncmVlbjogXCIyXCIsXG4gICAgeWVsbG93OiBcIjNcIixcbiAgICBibHVlOiBcIjRcIixcbiAgICBtYWdlbnRhOiBcIjVcIixcbiAgICBjeWFuOiBcIjZcIixcbiAgICB3aGl0ZTogXCI3XCJcbn1cblxuZXhwb3J0IGNvbnN0IFNUWUxFUyA9IHtcbiAgICBib2xkOiBcIjFcIixcbiAgICBub3JtYWw6IFwiMjJcIixcbiAgICBkaW06IFwiMlwiXG59XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUUyA9IHtcbiAgICBmb3I6IFwid2hpdGVcIixcbiAgICBiYWNrOiBcImJsYWNrXCIsXG4gICAgc3R5OiBcIm5vcm1hbFwiXG59XG5cblxuXG4vLyBUaGVzZSBiZWxvdyBhcmUgbm90IGV4cG9ydGVkIHRvIFBVRyBvciBMRVNTIGFzIHRoZXkgYXJlIGtleXMgZm9yIHNwZWNpZmljIGNsYXNzZXM6XG5leHBvcnQgY29uc3QgUFJFRklYRVMgPSB7XG4gICAgZm9yOiBcIjNcIixcbiAgICBiYWNrOiBcIjRcIixcbiAgICBzdHk6IFwiXCIsXG4gICAgYmxpbms6IFwiNVwiLFxuICAgIGNyb3NzOiBcIjlcIixcbiAgICB1bmRlcjogXCI0XCIsXG4gICAgaXRhOiBcIjNcIlxufVxuXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFByZWZpeCAoY2xzKSB7XG4gICAgaWYgKGNscy5pbmNsdWRlcyhTRVBBUkFUT1IpKSByZXR1cm4gY2xzLnNwbGl0KFNFUEFSQVRPUilbMF07XG4gICAgZWxzZSByZXR1cm4gY2xzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UG9zdGZpeCAoY2xzKSB7XG4gICAgaWYgKGNscy5pbmNsdWRlcyhTRVBBUkFUT1IpKSByZXR1cm4gY2xzLnNwbGl0KFNFUEFSQVRPUilbMV07XG4gICAgZWxzZSByZXR1cm4gXCJcIjtcbn1cblxuXG5cbmV4cG9ydCBmdW5jdGlvbiBtdWx0aXBsZVByZWZpeCAocHJlZikge1xuICAgIHJldHVybiAocHJlZiA9PT0gJ2ZvcicpIHx8IChwcmVmID09PSAnYmFjaycpIHx8IChwcmVmID09PSAnc3R5Jyk7XG59XG5cblxuXG5mdW5jdGlvbiBnZW5lcmF0ZUNsYXNzQ29kZXMgKCkge1xuICAgIGNvbnN0IGNvZGVzID0ge307XG4gICAgZm9yIChjb25zdCBwcmVmaXggaW4gUFJFRklYRVMpIHtcbiAgICAgICAgaWYgKChwcmVmaXggPT09ICdmb3InKSB8fCAocHJlZml4ID09PSAnYmFjaycpKVxuICAgICAgICAgICAgZm9yIChjb25zdCBjb2xvciBpbiBDT0xPUlMpXG4gICAgICAgICAgICAgICAgY29kZXNbcHJlZml4ICsgU0VQQVJBVE9SICsgY29sb3JdID0gUFJFRklYRVNbcHJlZml4XSArIENPTE9SU1tjb2xvcl07XG4gICAgICAgIGVsc2UgaWYgKHByZWZpeCA9PT0gJ3N0eScpXG4gICAgICAgICAgICBmb3IgKGNvbnN0IHN0eWxlcyBpbiBTVFlMRVMpXG4gICAgICAgICAgICAgICAgY29kZXNbcHJlZml4ICsgU0VQQVJBVE9SICsgc3R5bGVzXSA9IFBSRUZJWEVTW3ByZWZpeF0gKyBTVFlMRVNbc3R5bGVzXTtcbiAgICAgICAgZWxzZSBjb2Rlc1twcmVmaXhdID0gUFJFRklYRVNbcHJlZml4XTtcbiAgICB9XG4gICAgcmV0dXJuIGNvZGVzO1xufVxuXG5leHBvcnQgY29uc3QgQ0xBU1NfQ09ERVMgPSBnZW5lcmF0ZUNsYXNzQ29kZXMoKTtcblxuXG5cbi8vIEZvciBwYXNzaW5nIHZhcmlhYmxlcyB0byBMRVNTOlxuXG5leHBvcnQgY29uc3QgTEVTU19WQVJTID0ge1xuICAgIGNvbG9yczogT2JqZWN0LmtleXMoQ09MT1JTKSxcbiAgICBzdHlsZXM6IE9iamVjdC5rZXlzKFNUWUxFUylcbn07XG5cbk9iamVjdC5rZXlzKERFRkFVTFRTKS5mb3JFYWNoKCh2YWx1ZSkgPT4ge1xuICAgIExFU1NfVkFSU1tcImRlZi1cIiArIHZhbHVlXSA9IERFRkFVTFRTW3ZhbHVlXTtcbn0pO1xuXG5cblxuLy8gRm9yIHBhc3NpbmcgdmFyaWFibGVzIHRvIFBVRzpcblxuZXhwb3J0IGNvbnN0IFBVR19WQVJTID0ge1xuICAgIGNvbG9yczogT2JqZWN0LmtleXMoQ09MT1JTKSxcbiAgICBzdHlsZXM6IE9iamVjdC5rZXlzKFNUWUxFUyksXG5cbiAgICBsYW5ndWFnZXM6IExBTkdVQUdFUyxcbiAgICB0eXBlczogVFlQRVMsXG5cbiAgICBsaXRlcmFsczogTElURVJBTFMsXG4gICAgdHJhbnNsYXRpb25zOiBUUkFOU0xBVElPTlNcbn07XG4iLCJleHBvcnQgZnVuY3Rpb24gYXJlQXJyYXlzRXF1YWw8VD4gKGE6IFRbXSwgYjogVFtdKTogYm9vbGVhbiB7XG4gICAgaWYgKCFhIHx8ICFiKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgIGEuc29ydCgpO1xuICAgIGIuc29ydCgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykgaWYgKGFbaV0gIT09IGJbaV0pIHJldHVybiBmYWxzZTtcbiAgICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFNhbWVFbGVtZW50czxUPiAoYTogVFtdLCBiOiBUW10pOiBUW10ge1xuICAgIGlmIChhcmVBcnJheXNFcXVhbChhLCBiKSkgcmV0dXJuIGE7XG4gICAgcmV0dXJuIFsuLi5hXS5maWx0ZXIoKHZhbHVlOiBUKTogYm9vbGVhbiA9PiB7IHJldHVybiBiLmluY2x1ZGVzKHZhbHVlKTsgfSk7XG59XG4iLCJpbXBvcnQgeyBDTEFTU19DT0RFUywgREVGQVVMVFMsIGdldFBvc3RmaXgsIGdldFByZWZpeCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgYXJlQXJyYXlzRXF1YWwgfSBmcm9tIFwiLi91dGlsc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEVudHJ5IHtcbiAgICBjbGFzc2VzOiBzdHJpbmdbXTtcbiAgICB2YWx1ZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgRVNDQVBFX1NUQVJUID0gXCJcXFxcMDMzW1wiO1xuZXhwb3J0IGNvbnN0IEVTQ0FQRV9TRVBBUkFUT1IgPSBcIjtcIjtcbmV4cG9ydCBjb25zdCBFU0NBUEVfRU5EID0gXCJtXCI7XG5leHBvcnQgY29uc3QgRVNDQVBFX1RFUk1JTkFURSA9IFwiMFwiO1xuXG5cblxuLy9UT0RPOiBSZXZlcnNlIGZvciBmaWxlIHJlYWRpbmcuXG5mdW5jdGlvbiBjbGFzc2VzVG9TdHlsZXMoY2xhc3Nlczogc3RyaW5nW10pOiBzdHJpbmdbXSB7XG4gICAgY29uc3Qgc3R5bGVzOiBzdHJpbmdbXSA9IFtdO1xuICAgIGZvciAoY29uc3QgY2xzIG9mIGNsYXNzZXMpIHtcbiAgICAgICAgaWYgKERFRkFVTFRTW2dldFByZWZpeChjbHMpXSA9PSBnZXRQb3N0Zml4KGNscykpIGNvbnRpbnVlO1xuICAgICAgICBzdHlsZXMucHVzaChDTEFTU19DT0RFU1tjbHNdKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0eWxlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnQoc3RyOiBFbnRyeVtdKTogc3RyaW5nIHtcbiAgICBsZXQgcmVzdWx0ID0gXCJcIjtcbiAgICBsZXQgcHJldmlvdXNDbGFzc2VzOiBzdHJpbmdbXSA9IFtdO1xuICAgIGZvciAoY29uc3QgZW50cnkgb2Ygc3RyKSB7XG4gICAgICAgIGNvbnN0IHN0eWxlcyA9IGNsYXNzZXNUb1N0eWxlcyhlbnRyeS5jbGFzc2VzKTtcbiAgICAgICAgbGV0IGludGVyaW9yID0gXCJcIjtcbiAgICAgICAgaWYgKCFhcmVBcnJheXNFcXVhbChwcmV2aW91c0NsYXNzZXMsIHN0eWxlcykpIHtcbiAgICAgICAgICAgIGlmIChwcmV2aW91c0NsYXNzZXMubGVuZ3RoID4gMCkgaW50ZXJpb3IgKz0gRVNDQVBFX1NUQVJUICsgRVNDQVBFX1RFUk1JTkFURSArIEVTQ0FQRV9FTkQ7XG4gICAgICAgICAgICBpZiAoc3R5bGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBpbnRlcmlvciArPSBFU0NBUEVfU1RBUlQ7XG4gICAgICAgICAgICAgICAgaW50ZXJpb3IgKz0gc3R5bGVzLmpvaW4oRVNDQVBFX1NFUEFSQVRPUik7XG4gICAgICAgICAgICAgICAgaW50ZXJpb3IgKz0gRVNDQVBFX0VORDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpbnRlcmlvciArPSBlbnRyeS52YWx1ZTtcbiAgICAgICAgcmVzdWx0ICs9IGludGVyaW9yO1xuICAgICAgICBwcmV2aW91c0NsYXNzZXMgPSBzdHlsZXM7XG4gICAgfVxuICAgIGlmIChwcmV2aW91c0NsYXNzZXMubGVuZ3RoID4gMCkgcmVzdWx0ICs9IEVTQ0FQRV9TVEFSVCArIEVTQ0FQRV9URVJNSU5BVEUgKyBFU0NBUEVfRU5EO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG4iLCJpbXBvcnQgeyBERUZBVUxUUywgZ2V0UHJlZml4LCBtdWx0aXBsZVByZWZpeCwgU0VQQVJBVE9SIH0gZnJvbSBcIi4uL2NvcmUvY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBhcmVBcnJheXNFcXVhbCwgZ2V0U2FtZUVsZW1lbnRzIH0gZnJvbSBcIi4uL2NvcmUvdXRpbHNcIjtcbmltcG9ydCB7IGZpbmRfc3Bhbl9mb3JfcGxhY2UsIGdldF9jaG9zZW5fbGluZV9jb250ZW50IH0gZnJvbSBcIi4vdGVybWluYWxcIjtcblxudHlwZSBOb2RlRWRnZXMgPSB7IGZpcnN0OiBOb2RlLCBsYXN0OiBOb2RlLCBmaXJzdF9vZmZzZXQ6IG51bWJlciwgbGFzdF9vZmZzZXQ6IG51bWJlciB9O1xudHlwZSBTcGFuRWRnZXMgPSB7IGZpcnN0OiBIVE1MU3BhbkVsZW1lbnQsIGxhc3Q6IEhUTUxTcGFuRWxlbWVudCwgZmlyc3Rfb2Zmc2V0OiBudW1iZXIsIGxhc3Rfb2Zmc2V0OiBudW1iZXIgfTtcblxubGV0IHJhbmdlX2JhY2t1cDogeyBzdGFydDogbnVtYmVyLCBlbmQ6IG51bWJlciB9O1xuXG5mdW5jdGlvbiBub3JtYWxpemUgKGVkZ2VzOiBOb2RlRWRnZXMpOiBTcGFuRWRnZXMge1xuICAgIGxldCBzdGFydCA9IHsgbm9kZTogZmluZF9zcGFuX2Zvcl9wbGFjZShlZGdlcy5maXJzdCksIG9mZnNldDogZWRnZXMuZmlyc3Rfb2Zmc2V0IH07XG4gICAgbGV0IGVuZCA9IHsgbm9kZTogZmluZF9zcGFuX2Zvcl9wbGFjZShlZGdlcy5sYXN0KSwgb2Zmc2V0OiBlZGdlcy5sYXN0X29mZnNldCB9O1xuXG4gICAgaWYgKHN0YXJ0Lm5vZGUgPT0gZW5kLm5vZGUpXG4gICAgICAgIHJldHVybiB7IGZpcnN0OiBzdGFydC5ub2RlLCBmaXJzdF9vZmZzZXQ6IHN0YXJ0Lm9mZnNldCwgbGFzdDogZW5kLm5vZGUsIGxhc3Rfb2Zmc2V0OiBlbmQub2Zmc2V0IH07XG5cbiAgICBpZiAoKHN0YXJ0Lm9mZnNldCA9PSBzdGFydC5ub2RlLnRleHRDb250ZW50Lmxlbmd0aCkgJiYgKHN0YXJ0Lm5vZGUubmV4dEVsZW1lbnRTaWJsaW5nICE9IG51bGwpKVxuICAgICAgICBzdGFydCA9IHsgbm9kZTogc3RhcnQubm9kZS5uZXh0RWxlbWVudFNpYmxpbmcgYXMgSFRNTFNwYW5FbGVtZW50LCBvZmZzZXQ6IDB9O1xuXG4gICAgaWYgKHN0YXJ0Lm5vZGUgPT0gZW5kLm5vZGUpXG4gICAgICAgIHJldHVybiB7IGZpcnN0OiBzdGFydC5ub2RlLCBmaXJzdF9vZmZzZXQ6IHN0YXJ0Lm9mZnNldCwgbGFzdDogZW5kLm5vZGUsIGxhc3Rfb2Zmc2V0OiBlbmQub2Zmc2V0IH07XG5cbiAgICBpZiAoKGVuZC5vZmZzZXQgPT0gMCkgJiYgKGVuZC5ub2RlLnByZXZpb3VzRWxlbWVudFNpYmxpbmcgIT0gbnVsbCkpXG4gICAgICAgIGVuZCA9IHtcbiAgICAgICAgICAgIG5vZGU6IGVuZC5ub2RlLnByZXZpb3VzRWxlbWVudFNpYmxpbmcgYXMgSFRNTFNwYW5FbGVtZW50LFxuICAgICAgICAgICAgb2Zmc2V0OiBlbmQubm9kZS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nLnRleHRDb250ZW50Lmxlbmd0aFxuICAgICAgICB9O1xuXG4gICAgcmV0dXJuIHsgZmlyc3Q6IHN0YXJ0Lm5vZGUsIGZpcnN0X29mZnNldDogc3RhcnQub2Zmc2V0LCBsYXN0OiBlbmQubm9kZSwgbGFzdF9vZmZzZXQ6IGVuZC5vZmZzZXQgfTtcbn1cblxuZnVuY3Rpb24gcGFyc2VfcmFuZ2UgKHJhbmdlOiBSYW5nZSwgYmFja3VwOiBib29sZWFuKTogU3BhbkVkZ2VzIHtcbiAgICBjb25zdCBwYXJlbnQgPSBnZXRfY2hvc2VuX2xpbmVfY29udGVudCgpO1xuICAgIGxldCBzdGFydCA9IHJhbmdlLl9nZXRSYW5nZVN0YXJ0SW5Ob2RlKHBhcmVudCk7XG4gICAgbGV0IGVuZCA9IHJhbmdlLl9nZXRSYW5nZUVuZEluTm9kZShwYXJlbnQpO1xuICAgIGlmIChiYWNrdXApIHJhbmdlX2JhY2t1cCA9IHsgc3RhcnQ6IHN0YXJ0Lm9mZnNldCwgZW5kOiBlbmQub2Zmc2V0IH07XG5cbiAgICBpZiAoc3RhcnQgPT0gZW5kKSByZXR1cm4ge1xuICAgICAgICBmaXJzdDogZmluZF9zcGFuX2Zvcl9wbGFjZShzdGFydC5ub2RlKSxcbiAgICAgICAgbGFzdDogZmluZF9zcGFuX2Zvcl9wbGFjZShlbmQubm9kZSksXG4gICAgICAgIGZpcnN0X29mZnNldDogc3RhcnQubm9kZV9vZmZzZXQsXG4gICAgICAgIGxhc3Rfb2Zmc2V0OiBlbmQubm9kZV9vZmZzZXRcbiAgICB9OyBlbHNlIHJldHVybiBub3JtYWxpemUoe1xuICAgICAgICBmaXJzdDogc3RhcnQubm9kZSxcbiAgICAgICAgZmlyc3Rfb2Zmc2V0OiBzdGFydC5ub2RlX29mZnNldCxcbiAgICAgICAgbGFzdDogZW5kLm5vZGUsXG4gICAgICAgIGxhc3Rfb2Zmc2V0OiBlbmQubm9kZV9vZmZzZXRcbiAgICB9KTtcbn1cblxuZnVuY3Rpb24gcmVzdG9yZV9yYW5nZSAocmFuZ2U6IFJhbmdlKTogdm9pZCB7XG4gICAgcmFuZ2UuX3NldFJhbmdlU3RhcnRJbk5vZGUoZ2V0X2Nob3Nlbl9saW5lX2NvbnRlbnQoKSwgcmFuZ2VfYmFja3VwLnN0YXJ0KTtcbiAgICByYW5nZS5fc2V0UmFuZ2VFbmRJbk5vZGUoZ2V0X2Nob3Nlbl9saW5lX2NvbnRlbnQoKSwgcmFuZ2VfYmFja3VwLmVuZCk7XG59XG5cblxuXG4vL1RPRE86IGZvciBib3RoIGVsZW1lbnRzIG1ha2UgbnVsbCBcInZhcl9uYW1lXCIgYW5kIFwidmFyX3R5cGVcIlxuZnVuY3Rpb24gc3BsaXRBdChlbGVtOiBIVE1MU3BhbkVsZW1lbnQsIHBvczogbnVtYmVyLCBwb3N0SW5zZXJ0OiBib29sZWFuKSB7XG4gICAgY29uc3QgY2xvbmUgPSBlbGVtLmNsb25lTm9kZSh0cnVlKSBhcyBIVE1MU3BhbkVsZW1lbnQ7XG4gICAgaWYgKCFwb3N0SW5zZXJ0KSB7XG4gICAgICAgIGNsb25lLnRleHRDb250ZW50ID0gZWxlbS50ZXh0Q29udGVudC5zbGljZSgwLCBwb3MpO1xuICAgICAgICBlbGVtLmJlZm9yZShjbG9uZSk7XG4gICAgICAgIGVsZW0udGV4dENvbnRlbnQgPSBlbGVtLnRleHRDb250ZW50LnNsaWNlKHBvcyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY2xvbmUudGV4dENvbnRlbnQgPSBlbGVtLnRleHRDb250ZW50LnNsaWNlKHBvcyk7XG4gICAgICAgIGVsZW0uYWZ0ZXIoY2xvbmUpO1xuICAgICAgICBlbGVtLnRleHRDb250ZW50ID0gZWxlbS50ZXh0Q29udGVudC5zbGljZSgwLCBwb3MpO1xuICAgIH1cbn1cblxuLy9UT0RPOiBmb3IgYm90aCBlbGVtZW50cyBtYWtlIG51bGwgXCJ2YXJfbmFtZVwiIGFuZCBcInZhcl90eXBlXCJcbmZ1bmN0aW9uIGpvaW5Bcm91bmQoc2VsZWN0ZWQ6IEhUTUxTcGFuRWxlbWVudFtdKTogdm9pZCB7XG4gICAgaWYgKHNlbGVjdGVkLmxlbmd0aCA9PSAwKSByZXR1cm47XG5cbiAgICBjb25zdCBhcm91bmQgPSBbLi4uc2VsZWN0ZWRdO1xuICAgIGFyb3VuZC51bnNoaWZ0KGFyb3VuZFswXS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nIGFzIEhUTUxTcGFuRWxlbWVudCk7XG4gICAgYXJvdW5kLnB1c2goYXJvdW5kW2Fyb3VuZC5sZW5ndGggLSAxXS5uZXh0RWxlbWVudFNpYmxpbmcgYXMgSFRNTFNwYW5FbGVtZW50KTtcblxuICAgIGFyb3VuZC5mb3JFYWNoKCh2YWx1ZTogSFRNTFNwYW5FbGVtZW50LCBpbmRleDogbnVtYmVyKTogdm9pZCA9PiB7XG4gICAgICAgIGNvbnN0IGZyaWVuZCA9IGFyb3VuZFtpbmRleCAtIDFdO1xuICAgICAgICBpZiAoIWZyaWVuZCB8fCAhdmFsdWUpIHJldHVybjtcbiAgICAgICAgaWYgKGFyZUFycmF5c0VxdWFsKFsuLi52YWx1ZS5jbGFzc0xpc3RdLCBbLi4uZnJpZW5kLmNsYXNzTGlzdF0pKSB7XG4gICAgICAgICAgICB2YWx1ZS50ZXh0Q29udGVudCA9IGZyaWVuZC50ZXh0Q29udGVudCArIHZhbHVlLnRleHRDb250ZW50O1xuICAgICAgICAgICAgZnJpZW5kLnJlbW92ZSgpO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5cblxuXG5mdW5jdGlvbiBnZXRTZWxlY3RlZCAoZmlyc3Q6IEhUTUxTcGFuRWxlbWVudCwgbGFzdDogSFRNTFNwYW5FbGVtZW50KTogSFRNTFNwYW5FbGVtZW50W10ge1xuICAgIGlmIChmaXJzdCA9PSBsYXN0KSByZXR1cm4gW2ZpcnN0XTtcbiAgICBjb25zdCBzZWxlY3RlZDogSFRNTFNwYW5FbGVtZW50W10gPSBbXTtcbiAgICBsZXQgY3VycmVudCA9IGZpcnN0O1xuICAgIHdoaWxlIChjdXJyZW50ICE9IGxhc3QpIHtcbiAgICAgICAgc2VsZWN0ZWQucHVzaChjdXJyZW50KTtcbiAgICAgICAgY3VycmVudCA9IGN1cnJlbnQubmV4dEVsZW1lbnRTaWJsaW5nIGFzIEhUTUxTcGFuRWxlbWVudDtcbiAgICB9XG4gICAgc2VsZWN0ZWQucHVzaChsYXN0KTtcbiAgICByZXR1cm4gc2VsZWN0ZWQ7XG59XG5cbmludGVyZmFjZSBGb3JtYXR0aW5nIHtcbiAgICB0eXBlOiBzdHJpbmc7XG4gICAgdmFsdWU6IHN0cmluZyB8IGJvb2xlYW47XG59XG5cbmZ1bmN0aW9uIGNoYW5nZUNsYXNzKGVsZW06IEVsZW1lbnQsIG5hbWU6IHN0cmluZywgdmFsOiBzdHJpbmcpOiB2b2lkIHtcbiAgICBjb25zdCBuZXdfbmFtZSA9IG5hbWUgKyBTRVBBUkFUT1IgKyB2YWw7XG4gICAgY29uc3Qgc2FtZV9jbGFzcyA9IFsuLi5lbGVtLmNsYXNzTGlzdF0uZmluZCgodmFsdWU6IHN0cmluZyk6IGJvb2xlYW4gPT4ge1xuICAgICAgICByZXR1cm4gdmFsdWUuc3RhcnRzV2l0aChuYW1lKTtcbiAgICB9KTtcbiAgICBpZiAoISFzYW1lX2NsYXNzKSBlbGVtLmNsYXNzTGlzdC5yZXBsYWNlKHNhbWVfY2xhc3MsIG5ld19uYW1lKTtcbiAgICBlbHNlIGVsZW0uY2xhc3NMaXN0LmFkZChuZXdfbmFtZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjaGFuZ2Uoc2VsZWN0aW9uOiBTZWxlY3Rpb24sIGZvcm1hdDogRm9ybWF0dGluZyk6IHZvaWQge1xuICAgIGlmIChzZWxlY3Rpb24uaXNDb2xsYXBzZWQpIHJldHVybjtcblxuICAgIGNvbnN0IGN1dHRpbmdTdGFydCA9IChvZmZzZXQ6IG51bWJlciwgc3RhcnQ6IEhUTUxTcGFuRWxlbWVudCk6IGJvb2xlYW4gPT4ge1xuICAgICAgICByZXR1cm4gKG9mZnNldCA9PSAwKSB8fCAob2Zmc2V0ID09IHN0YXJ0LnRleHRDb250ZW50Lmxlbmd0aCk7XG4gICAgfTtcbiAgICBjb25zdCBjdXR0aW5nRW5kID0gKG9mZnNldDogbnVtYmVyLCBlbmQ6IEhUTUxTcGFuRWxlbWVudCk6IGJvb2xlYW4gPT4ge1xuICAgICAgICByZXR1cm4gKG9mZnNldCA9PSAwKSB8fCAob2Zmc2V0ID09IGVuZC50ZXh0Q29udGVudC5sZW5ndGgpO1xuICAgIH07XG5cbiAgICBjb25zdCByYW5nZSA9IHNlbGVjdGlvbi5nZXRSYW5nZUF0KDApO1xuICAgIGNvbnN0IHsgZmlyc3QsIGxhc3QsIGZpcnN0X29mZnNldCwgbGFzdF9vZmZzZXQgfSA9IHBhcnNlX3JhbmdlKHJhbmdlLCB0cnVlKTtcblxuICAgIGlmIChmaXJzdC5pc1NhbWVOb2RlKGxhc3QpKSB7XG4gICAgICAgIGNvbnN0IGZpbmFsT2Zmc2V0ID0gbGFzdF9vZmZzZXQgLSBmaXJzdF9vZmZzZXQ7XG4gICAgICAgIGlmICghY3V0dGluZ1N0YXJ0KGZpcnN0X29mZnNldCwgZmlyc3QpKSBzcGxpdEF0KGZpcnN0LCBmaXJzdF9vZmZzZXQsIGZhbHNlKTtcbiAgICAgICAgaWYgKCFjdXR0aW5nRW5kKGZpbmFsT2Zmc2V0LCBsYXN0KSkgc3BsaXRBdChsYXN0LCBmaW5hbE9mZnNldCwgdHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKCFjdXR0aW5nU3RhcnQoZmlyc3Rfb2Zmc2V0LCBmaXJzdCkpIHNwbGl0QXQoZmlyc3QsIGZpcnN0X29mZnNldCwgZmFsc2UpO1xuICAgICAgICBpZiAoIWN1dHRpbmdFbmQobGFzdF9vZmZzZXQsIGxhc3QpKSBzcGxpdEF0KGxhc3QsIGxhc3Rfb2Zmc2V0LCB0cnVlKTtcbiAgICB9XG5cbiAgICBjb25zdCBzZWxlY3RlZCA9IGdldFNlbGVjdGVkKGZpcnN0LCBsYXN0KTtcbiAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIHNlbGVjdGVkKVxuICAgICAgICBpZiAobXVsdGlwbGVQcmVmaXgoZm9ybWF0LnR5cGUpKSBjaGFuZ2VDbGFzcyhjaGlsZCwgZm9ybWF0LnR5cGUsIGZvcm1hdC52YWx1ZSBhcyBzdHJpbmcpO1xuICAgICAgICBlbHNlIGNoaWxkLmNsYXNzTGlzdC50b2dnbGUoZm9ybWF0LnR5cGUsIGZvcm1hdC52YWx1ZSBhcyBib29sZWFuKTtcblxuICAgIGpvaW5Bcm91bmQoc2VsZWN0ZWQpO1xuICAgIHJlc3RvcmVfcmFuZ2UocmFuZ2UpO1xufVxuXG5cblxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbW1vbkNsYXNzZXMoc2VsZWN0aW9uOiBTZWxlY3Rpb24sIHNpbmdsZT86IEVsZW1lbnQpOiBzdHJpbmdbXSB8IG51bGwge1xuICAgIGlmIChzaW5nbGUpIHJldHVybiBbLi4uc2luZ2xlLmNsYXNzTGlzdF07XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHsgZmlyc3QsIGxhc3QgfSA9IHBhcnNlX3JhbmdlKHNlbGVjdGlvbi5nZXRSYW5nZUF0KDApLCBmYWxzZSk7XG4gICAgICAgIGNvbnN0IG11bHRpcGxlID0gZ2V0U2VsZWN0ZWQoZmlyc3QsIGxhc3QpLm1hcCgodmFsdWUpOiBzdHJpbmdbXSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjbGFzc2VzID0gWy4uLnZhbHVlLmNsYXNzTGlzdF07XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGRlZiBpbiBERUZBVUxUUykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGNsYXNzZXMuZmluZCgodmFsKSA9PiB7IHJldHVybiBnZXRQcmVmaXgodmFsKSA9PSBkZWY7IH0pO1xuICAgICAgICAgICAgICAgIGlmICghdGFyZ2V0KSBjbGFzc2VzLnB1c2goZGVmICsgU0VQQVJBVE9SICsgREVGQVVMVFNbZGVmXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY2xhc3NlcztcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChtdWx0aXBsZS5sZW5ndGggPT0gMCkgcmV0dXJuIG51bGw7XG4gICAgICAgIHJldHVybiBtdWx0aXBsZS5yZWR1Y2UoKHByZXY6IHN0cmluZ1tdLCB2YWx1ZTogc3RyaW5nW10pOiBzdHJpbmdbXSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0U2FtZUVsZW1lbnRzKHByZXYsIHZhbHVlKTtcbiAgICAgICAgfSwgbXVsdGlwbGVbMF0pO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IGNoYW5nZSwgZ2V0Q29tbW9uQ2xhc3NlcyB9IGZyb20gXCIuL2N1dHRlclwiO1xuaW1wb3J0IHsgc2VsZWN0aW9uX2luX3BsYWNlIH0gZnJvbSBcIi4vdGVybWluYWxcIjtcbmltcG9ydCB7IGdldFBvc3RmaXgsIGdldFByZWZpeCB9IGZyb20gXCIuLi9jb3JlL2NvbnN0YW50c1wiO1xuXG5mdW5jdGlvbiBhcHBseV9zdHlsZSAoc2VsZWN0aW9uOiBTZWxlY3Rpb24sIGVsZW06IEhUTUxJbnB1dEVsZW1lbnQpOiB2b2lkIHtcbiAgICBjb25zdCBuYW1lID0gZWxlbS5nZXRBdHRyaWJ1dGUoJ25hbWUnKTtcbiAgICBpZiAoZWxlbS5nZXRBdHRyaWJ1dGUoJ3R5cGUnKSA9PSAnY2hlY2tib3gnKVxuICAgICAgICBjaGFuZ2Uoc2VsZWN0aW9uLCB7dHlwZTogbmFtZSwgdmFsdWU6IGVsZW0uY2hlY2tlZH0pO1xuICAgIGVsc2UgY2hhbmdlKHNlbGVjdGlvbiwge3R5cGU6IG5hbWUsIHZhbHVlOiBlbGVtLnZhbHVlfSk7XG59XG5cbmZ1bmN0aW9uIGFwcGx5X3N0eWxlcyAoc2VsZWN0aW9uOiBTZWxlY3Rpb24sIGVsZW06IEhUTUxCdXR0b25FbGVtZW50KTogdm9pZCB7XG59XG5cbmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdHlsZS1jb250ZW50Jykub25jbGljayA9IChldmVudCkgPT4ge1xuICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldCBhcyBIVE1MRWxlbWVudDtcblxuICAgIGlmICh0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCd0ZXJtLWNoYW5nZXInKSB8fCB0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdwcmVzZXRfYnV0dG9uJykpIHtcbiAgICAgICAgY29uc3Qgc2VsZWN0aW9uID0gZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCk7XG4gICAgICAgIGlmIChzZWxlY3Rpb24ucmFuZ2VDb3VudCA+IDApIHtcbiAgICAgICAgICAgIGlmICghc2VsZWN0aW9uX2luX3BsYWNlKHNlbGVjdGlvbikpIHJldHVybjtcbiAgICAgICAgICAgIGlmICh0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCd0ZXJtLWNoYW5nZXInKSkgYXBwbHlfc3R5bGUoc2VsZWN0aW9uLCB0YXJnZXQgYXMgSFRNTElucHV0RWxlbWVudCk7XG4gICAgICAgICAgICBlbHNlIGFwcGx5X3N0eWxlcyhzZWxlY3Rpb24sIHRhcmdldCBhcyBIVE1MQnV0dG9uRWxlbWVudCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG5leHBvcnQgZnVuY3Rpb24gcmVmbGVjdF9zZWxlY3Rpb24gKHNlbGVjdGlvbjogU2VsZWN0aW9uLCBzaW5nbGU/OiBFbGVtZW50KSB7XG4gICAgY29uc3QgY2xhc3NlcyA9IGdldENvbW1vbkNsYXNzZXMoc2VsZWN0aW9uLCBzaW5nbGUpO1xuICAgIGlmIChjbGFzc2VzKSBzZXRfdGVybV9jaGFuZ2VycyhjbGFzc2VzKTtcbiAgICBlbHNlIGRyb3BfdGVybV9jaGFuZ2VycygpO1xufVxuXG5jb25zdCB0ZXJtX2NoYW5nZXJzID0gWy4uLmRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3Rlcm0tY2hhbmdlcicpXSBhcyBIVE1MSW5wdXRFbGVtZW50W107XG5cbmV4cG9ydCBmdW5jdGlvbiBkcm9wX3Rlcm1fY2hhbmdlcnMgKCk6IHZvaWQge1xuICAgIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3R5bGUtY29udGVudCcpIGFzIEhUTUxGb3JtRWxlbWVudCkucmVzZXQoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldF90ZXJtX2NoYW5nZXJzIChjbGFzc2VzOiBzdHJpbmdbXSk6IHZvaWQge1xuICAgIGRyb3BfdGVybV9jaGFuZ2VycygpO1xuXG4gICAgZm9yIChjb25zdCBjbHMgb2YgY2xhc3Nlcykge1xuICAgICAgICBjb25zdCB0ZXJtX2NoYW5nZXIgPSBbLi4udGVybV9jaGFuZ2Vyc10uZmlsdGVyKCh2YWx1ZTogSFRNTElucHV0RWxlbWVudCk6IGJvb2xlYW4gPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmdldEF0dHJpYnV0ZSgnbmFtZScpID09IGdldFByZWZpeChjbHMpO1xuICAgICAgICB9KTtcblxuICAgICAgICBpZiAodGVybV9jaGFuZ2VyLmxlbmd0aCA9PSAxKSB7XG4gICAgICAgICAgICBpZiAodGVybV9jaGFuZ2VyWzBdLmdldEF0dHJpYnV0ZSgndHlwZScpID09ICdjaGVja2JveCcpIHRlcm1fY2hhbmdlclswXS5jaGVja2VkID0gdHJ1ZTtcbiAgICAgICAgICAgIGVsc2UgdGVybV9jaGFuZ2VyWzBdLnZhbHVlID0gZ2V0UG9zdGZpeChjbHMpO1xuICAgICAgICB9IGVsc2UgdGVybV9jaGFuZ2VyLmZpbmQoKHZhbHVlOiBIVE1MSW5wdXRFbGVtZW50KTogYm9vbGVhbiA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUudmFsdWUgPT0gZ2V0UG9zdGZpeChjbHMpO1xuICAgICAgICB9KS5jaGVja2VkID0gdHJ1ZTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBjb252ZXJ0LCBFbnRyeSB9IGZyb20gXCIuLi9jb3JlL2NvbnZlcnRlclwiO1xuaW1wb3J0IHsgcmVmbGVjdF9zZWxlY3Rpb24gfSBmcm9tIFwiLi9zdHlsZV90YWJcIjtcblxuZXhwb3J0IGNvbnN0IHRlcm1pbmFsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rlcm1pbmFsJyk7XG5leHBvcnQgbGV0IGVkaXRhYmxlID0gdHJ1ZTtcbmxldCBlZGl0YWJsZUhUTUw6IHN0cmluZ1tdO1xuXG5cblxudGVybWluYWwub25rZXlkb3duID0gKGV2ZW50KSA9PiB7XG4gICAgY29uc3Qgc2VsZWN0aW9uID0gZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCk7XG4gICAgaWYgKHNlbGVjdGlvbi5yYW5nZUNvdW50ID09IDApIHJldHVybjtcblxuICAgIGlmIChldmVudC5rZXkgPT09ICdFbnRlcicpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgY2hvb3NlX2xpbmUoY3JlYXRlX2xpbmUoZ2V0X2Nob3Nlbl9saW5lKCkpKTtcbiAgICB9IGVsc2UgaWYgKGV2ZW50LmtleSA9PSAnQmFja3NwYWNlJykge1xuICAgICAgICBpZiAoc2VsZWN0aW9uLmlzQ29sbGFwc2VkKSB7XG4gICAgICAgICAgICBjb25zdCByYW5nZSA9IHNlbGVjdGlvbi5nZXRSYW5nZUF0KDApO1xuICAgICAgICAgICAgY29uc3QgY2hvc2VuX2NoaWxkcmVuID0gZ2V0X2Nob3Nlbl9saW5lX2NvbnRlbnQoKS5jaGlsZHJlbjtcbiAgICAgICAgICAgIGlmICgocmFuZ2Uuc3RhcnRDb250YWluZXIudGV4dENvbnRlbnQgPT0gJycpICYmIChjaG9zZW5fY2hpbGRyZW4ubGVuZ3RoID09IDEpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNob3Nlbl9jaGlsZHJlblswXS5jbGFzc0xpc3QubGVuZ3RoICE9IDApIHtcbiAgICAgICAgICAgICAgICAgICAgY2hvc2VuX2NoaWxkcmVuWzBdLmNsYXNzTmFtZSA9ICcnO1xuICAgICAgICAgICAgICAgICAgICByZWZsZWN0X3NlbGVjdGlvbihzZWxlY3Rpb24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9IGVsc2UgaWYgKChldmVudC5rZXkgPT0gJ0Fycm93VXAnKSB8fCAoZXZlbnQua2V5ID09ICdBcnJvd0Rvd24nKSkge1xuICAgICAgICBjb25zdCBjaG9zZW4gPSBnZXRfY2hvc2VuX2xpbmUoKTtcbiAgICAgICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQua2V5ID09ICdBcnJvd1VwJyA/IGNob3Nlbi5wcmV2aW91c0VsZW1lbnRTaWJsaW5nIDogY2hvc2VuLm5leHRFbGVtZW50U2libGluZztcbiAgICAgICAgY2hvb3NlX2xpbmUodGFyZ2V0LCBzZWxlY3Rpb24uX2dldEZvY3VzT2Zmc2V0SW5Ob2RlKGNob3NlbikgLSAxKTtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG59O1xuXG5cblxuZnVuY3Rpb24gZGlzYWJsZUFuZENsZWFyKCkge1xuICAgIGNvbnN0IGxpbmVfY29udGVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdsaW5lLWNvbnRlbnQnKTtcbiAgICBmb3IgKGNvbnN0IGNvbnRlbnQgb2YgbGluZV9jb250ZW50cykge1xuICAgICAgICBjb250ZW50LnNldEF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJywgJ2ZhbHNlJyk7XG4gICAgICAgIGZvciAoY29uc3Qgc3BhbiBvZiBjb250ZW50LmNoaWxkcmVuKSBzcGFuLnNldEF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJywgJ2ZhbHNlJyk7XG4gICAgfVxuXG4gICAgY29uc3QgbGluZV9udW1iZXJzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbGluZS1udW1iZXInKTtcbiAgICBmb3IgKGNvbnN0IG51bWJlciBvZiBsaW5lX251bWJlcnMpIG51bWJlci5jbGFzc0xpc3QucmVtb3ZlKCdjaG9zZW4nKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNob29zZV9saW5lIChsaW5lLCBwb3M/KSB7XG4gICAgaWYgKCFsaW5lIHx8ICFsaW5lLmNsYXNzTGlzdC5jb250YWlucygnbGluZScpIHx8IChsaW5lLmNoaWxkcmVuLmxlbmd0aCAhPSAyKSkgcmV0dXJuO1xuXG4gICAgY29uc3QgbGluZV9udW1iZXIgPSBsaW5lLmZpcnN0RWxlbWVudENoaWxkO1xuICAgIGNvbnN0IGxpbmVfY29udGVudCA9IGxpbmUubGFzdEVsZW1lbnRDaGlsZDtcblxuICAgIGRpc2FibGVBbmRDbGVhcigpO1xuXG4gICAgbGluZV9jb250ZW50LnNldEF0dHJpYnV0ZSgnY29udGVudGVkaXRhYmxlJywgJ3RydWUnKTtcbiAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGxpbmVfY29udGVudC5jaGlsZHJlbikgY2hpbGQuc2V0QXR0cmlidXRlKCdjb250ZW50ZWRpdGFibGUnLCAndHJ1ZScpO1xuICAgIGxpbmVfbnVtYmVyLmNsYXNzTGlzdC5hZGQoJ2Nob3NlbicpO1xuXG4gICAgY29uc3QgcmFuZ2UgPSBkb2N1bWVudC5jcmVhdGVSYW5nZSgpO1xuICAgIHJhbmdlLl9zZXRSYW5nZUluTm9kZShsaW5lX2NvbnRlbnQsIHBvcyk7XG4gICAgY29uc3Qgc2VsID0gZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCk7XG4gICAgc2VsLnJlbW92ZUFsbFJhbmdlcygpO1xuICAgIHNlbC5hZGRSYW5nZShyYW5nZSk7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZV9saW5lIChhZnRlcjogSFRNTERpdkVsZW1lbnQgPSBudWxsLCBiZWZvcmU6IEhUTUxEaXZFbGVtZW50ID0gbnVsbCk6IEhUTUxEaXZFbGVtZW50IHtcbiAgICBjb25zdCBsaW5lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGluZS5jbGFzc0xpc3QuYWRkKCdsaW5lJyk7XG5cbiAgICBjb25zdCBsaW5lX251bWJlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGxpbmVfbnVtYmVyLmNsYXNzTGlzdC5hZGQoJ2xpbmUtbnVtYmVyJyk7XG4gICAgbGluZV9udW1iZXIuaW5uZXJIVE1MID0gU3RyaW5nKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ2xpbmUnKS5sZW5ndGgpO1xuXG4gICAgY29uc3QgbGluZV9jb250ZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgbGluZV9jb250ZW50LmNsYXNzTGlzdC5hZGQoJ2xpbmUtY29udGVudCcpO1xuICAgIGxpbmVfY29udGVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJykpO1xuXG4gICAgbGluZS5hcHBlbmQobGluZV9udW1iZXIsIGxpbmVfY29udGVudCk7XG5cbiAgICBpZiAoISFhZnRlcikgYWZ0ZXIuYWZ0ZXIobGluZSk7XG4gICAgaWYgKCEhYmVmb3JlKSBiZWZvcmUuYmVmb3JlKGxpbmUpO1xuICAgIHJldHVybiBsaW5lO1xufVxuXG50ZXJtaW5hbC5vbmNsaWNrID0gKGV2ZW50KSA9PiB7XG4gICAgY29uc3QgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0IGFzIEhUTUxFbGVtZW50O1xuICAgIGlmICghdGFyZ2V0LnBhcmVudEVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKCdsaW5lJykgfHwgIWVkaXRhYmxlKSByZXR1cm47XG4gICAgaWYgKHRhcmdldC5pZCA9PT0gJ2xpbmUtYWRkZXInKSBjaG9vc2VfbGluZShjcmVhdGVfbGluZShudWxsLCB0YXJnZXQucGFyZW50RWxlbWVudCBhcyBIVE1MRGl2RWxlbWVudCkpO1xuICAgIGVsc2UgaWYgKHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2xpbmUtbnVtYmVyJykpIGNob29zZV9saW5lKHRhcmdldC5wYXJlbnRFbGVtZW50KTtcbn07XG5cblxuXG5mdW5jdGlvbiBodG1sVG9FbnRyaWVzKGNoaWxkcmVuOiBIVE1MQ29sbGVjdGlvbik6IEVudHJ5W10ge1xuICAgIGNvbnN0IGVudHJpZXMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IGNoaWxkIG9mIGNoaWxkcmVuKSBlbnRyaWVzLnB1c2goe1xuICAgICAgICBjbGFzc2VzOiBbLi4uY2hpbGQuY2xhc3NMaXN0XSxcbiAgICAgICAgdmFsdWU6IChjaGlsZCBhcyBIVE1MU3BhbkVsZW1lbnQpLnRleHRDb250ZW50XG4gICAgfSk7XG4gICAgcmV0dXJuIGVudHJpZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzd2l0Y2hNb2RlKGVkaXQ6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICBjb25zdCBsaW5lX2NvbnRlbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbGluZS1jb250ZW50Jyk7XG4gICAgY29uc3QgbGluZV9udW1iZXJzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbGluZS1udW1iZXInKTtcblxuICAgIGlmIChlZGl0YWJsZSAmJiAhZWRpdCkge1xuICAgICAgICBkaXNhYmxlQW5kQ2xlYXIoKTtcbiAgICAgICAgZWRpdGFibGVIVE1MID0gW107XG4gICAgICAgIGZvciAoY29uc3QgY29udGVudCBvZiBsaW5lX2NvbnRlbnRzKSB7XG4gICAgICAgICAgICBlZGl0YWJsZUhUTUwucHVzaChjb250ZW50LmlubmVySFRNTCk7XG4gICAgICAgICAgICBjb250ZW50LmlubmVySFRNTCA9IGNvbnZlcnQoaHRtbFRvRW50cmllcyhjb250ZW50LmNoaWxkcmVuKSk7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBjb250ZW50IG9mIGxpbmVfY29udGVudHMgYXMgSFRNTENvbGxlY3Rpb25PZjxIVE1MRGl2RWxlbWVudD4pIGNvbnRlbnQuc3R5bGUudXNlclNlbGVjdCA9ICdhdXRvJztcbiAgICAgICAgZm9yIChjb25zdCBudW1iZXIgb2YgbGluZV9udW1iZXJzIGFzIEhUTUxDb2xsZWN0aW9uT2Y8SFRNTERpdkVsZW1lbnQ+KSBudW1iZXIuc3R5bGUuY3Vyc29yID0gJ2RlZmF1bHQnO1xuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGluZS1hZGRlcicpLnBhcmVudEVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblxuICAgIH0gZWxzZSBpZiAoIWVkaXRhYmxlICYmIGVkaXQpIHtcbiAgICAgICAgZm9yIChjb25zdCBjb250ZW50IG9mIGxpbmVfY29udGVudHMpIGNvbnRlbnQuaW5uZXJIVE1MID0gZWRpdGFibGVIVE1MLnNoaWZ0KCk7XG4gICAgICAgIGZvciAoY29uc3QgY29udGVudCBvZiBsaW5lX2NvbnRlbnRzIGFzIEhUTUxDb2xsZWN0aW9uT2Y8SFRNTERpdkVsZW1lbnQ+KSBjb250ZW50LnN0eWxlLnVzZXJTZWxlY3QgPSAnJztcbiAgICAgICAgZm9yIChjb25zdCBudW1iZXIgb2YgbGluZV9udW1iZXJzIGFzIEhUTUxDb2xsZWN0aW9uT2Y8SFRNTERpdkVsZW1lbnQ+KSBudW1iZXIuc3R5bGUuY3Vyc29yID0gJyc7XG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsaW5lLWFkZGVyJykucGFyZW50RWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJyc7XG5cbiAgICB9IGVsc2UgaWYgKCFlZGl0YWJsZSAmJiAhZWRpdCkgZm9yIChjb25zdCBjb250ZW50IG9mIGxpbmVfY29udGVudHMpIGNvbnRlbnQuaW5uZXJIVE1MID0gXCJcIjtcbiAgICBlZGl0YWJsZSA9IGVkaXQ7XG59XG5cblxuXG5mdW5jdGlvbiBnZXRfY2hvc2VuX2xpbmUgKCk6IEhUTUxEaXZFbGVtZW50IHtcbiAgICByZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnY2hvc2VuJylbMF0ucGFyZW50RWxlbWVudCBhcyBIVE1MRGl2RWxlbWVudDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldF9jaG9zZW5fbGluZV9jb250ZW50ICgpOiBIVE1MRGl2RWxlbWVudCB7XG4gICAgcmV0dXJuIGdldF9jaG9zZW5fbGluZSgpLmxhc3RFbGVtZW50Q2hpbGQgYXMgSFRNTERpdkVsZW1lbnQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3Rpb25faW5fcGxhY2UgKHNlbGVjdGlvbjogU2VsZWN0aW9uKTogYm9vbGVhbiB7XG4gICAgY29uc3Qgc2VsZWN0aW9uUGFyZW50ID0gc2VsZWN0aW9uLmdldFJhbmdlQXQoMCkuY29tbW9uQW5jZXN0b3JDb250YWluZXI7XG4gICAgcmV0dXJuIGdldF9jaG9zZW5fbGluZV9jb250ZW50KCkuY29udGFpbnMoc2VsZWN0aW9uUGFyZW50KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGZpbmRfc3Bhbl9mb3JfcGxhY2UgKG5vZGU6IE5vZGUpOiBIVE1MU3BhbkVsZW1lbnQge1xuICAgIGlmIChub2RlLm5vZGVUeXBlID09IE5vZGUuVEVYVF9OT0RFKSByZXR1cm4gbm9kZS5wYXJlbnRFbGVtZW50O1xuICAgIGlmIChub2RlLm5vZGVOYW1lICE9ICdTUEFOJykgdGhyb3cgbmV3IERPTUV4Y2VwdGlvbihcIlNlbGVjdGVkIHdyb25nIGVsZW1lbnQ6IFwiICsgbm9kZS5ub2RlTmFtZSk7XG4gICAgcmV0dXJuIG5vZGUgYXMgSFRNTFNwYW5FbGVtZW50O1xufVxuIiwiaW1wb3J0IHsgc3dpdGNoTW9kZSB9IGZyb20gXCIuL3Rlcm1pbmFsXCI7XG5cbmxldCBhY3RpdmVfdGFiOiBzdHJpbmc7XG5cbmV4cG9ydCBmdW5jdGlvbiBvcGVuX3RhYih0YWJfbGluaywgdGFiX2NvbnRlbnQpIHtcbiAgICBjb25zdCB0YWJfY29udGVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCd0YWItY29udGVudCcpO1xuICAgIGZvciAoY29uc3QgY29udGVudCBvZiB0YWJfY29udGVudHMgYXMgSFRNTENvbGxlY3Rpb25PZjxIVE1MRGl2RWxlbWVudD4pIGNvbnRlbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblxuICAgIGNvbnN0IHRhYl9saW5rcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3RhYi1saW5rJyk7XG4gICAgZm9yIChjb25zdCBsaW5rIG9mIHRhYl9saW5rcyBhcyBIVE1MQ29sbGVjdGlvbk9mPEhUTUxCdXR0b25FbGVtZW50PikgbGluay5jbGFzc0xpc3QucmVtb3ZlKCdhY3RpdmUnKTtcblxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRhYl9jb250ZW50KS5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRhYl9saW5rKS5jbGFzc0xpc3QuYWRkKCdhY3RpdmUnKTtcblxuICAgIGFjdGl2ZV90YWIgPSB0YWJfY29udGVudDtcbn1cblxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhYi1saW5rcycpLm9uY2xpY2sgPSAoZXZlbnQpID0+IHtcbiAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQgYXMgSFRNTEVsZW1lbnQ7XG4gICAgaWYgKHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3RhYi1saW5rJykpIHtcbiAgICAgICAgY29uc3QgdGFiX2NvbnRlbnRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RhYi1jb250ZW50cycpO1xuICAgICAgICBjb25zdCBoZWFkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaGVhZGVyJyk7XG4gICAgICAgIG9wZW5fdGFiKHRhcmdldC5pZCwgdGFyZ2V0LmlkLnJlcGxhY2UoJ3RhYicsICdjb250ZW50JykpO1xuXG4gICAgICAgIGlmICh0YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdjb2xsYXBzaW5nJykpIHtcbiAgICAgICAgICAgIHRhYl9jb250ZW50cy5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgICAgICAgICAgaGVhZGVyLnN0eWxlLmhlaWdodCA9ICdhdXRvJztcbiAgICAgICAgICAgIHN3aXRjaE1vZGUoZmFsc2UpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGFiX2NvbnRlbnRzLnN0eWxlLmRpc3BsYXkgPSAnJztcbiAgICAgICAgICAgIGhlYWRlci5zdHlsZS5oZWlnaHQgPSAnJztcbiAgICAgICAgICAgIHN3aXRjaE1vZGUodHJ1ZSk7XG4gICAgICAgIH1cbiAgICB9XG59O1xuIiwiaW1wb3J0ICcuL2ltcG9ydHMnXG5cbmltcG9ydCB7IG9wZW5fdGFiIH0gZnJvbSBcIi4vdGFic1wiO1xuaW1wb3J0IHsgY2hvb3NlX2xpbmUsIGVkaXRhYmxlLCBzZWxlY3Rpb25faW5fcGxhY2UsIHRlcm1pbmFsIH0gZnJvbSBcIi4vdGVybWluYWxcIjtcbmltcG9ydCB7IHJlZmxlY3Rfc2VsZWN0aW9uIH0gZnJvbSBcIi4vc3R5bGVfdGFiXCI7XG5cblxuXG53aW5kb3cub25sb2FkID0gKCkgPT4ge1xuICAgIG9wZW5fdGFiKCdzdHlsZS10YWInLCAnc3R5bGUtY29udGVudCcpO1xuICAgIGNob29zZV9saW5lKHRlcm1pbmFsLmZpcnN0RWxlbWVudENoaWxkKTtcbn1cblxuXG5cbmRvY3VtZW50Lm9uZHJhZ3N0YXJ0ID0gKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICByZXR1cm4gZmFsc2U7XG59O1xuXG5kb2N1bWVudC5vbmRyb3AgPSAoZXZlbnQpID0+IHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHJldHVybiBmYWxzZTtcbn07XG5cblxuXG5kb2N1bWVudC5vbnNlbGVjdGlvbmNoYW5nZSA9ICgpID0+IHtcbiAgICBjb25zdCBzZWxlY3Rpb24gPSBkb2N1bWVudC5nZXRTZWxlY3Rpb24oKTtcbiAgICBpZiAoIWVkaXRhYmxlIHx8ICFzZWxlY3Rpb25faW5fcGxhY2Uoc2VsZWN0aW9uKSkgcmV0dXJuO1xuICAgIHJlZmxlY3Rfc2VsZWN0aW9uKHNlbGVjdGlvbik7XG59XG5cblxuXG5kb2N1bWVudC5vbmNvcHkgPSAoZXZlbnQpID0+IHtcbiAgICBjb25zdCBzZWxlY3Rpb24gPSBkb2N1bWVudC5nZXRTZWxlY3Rpb24oKTtcbiAgICBpZiAoISFzZWxlY3Rpb24pIHtcbiAgICAgICAgY29uc3Qgc3RyID0gZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCkudG9TdHJpbmcoKTtcbiAgICAgICAgY29uc3QgcmVmaW5lZCA9IHN0ci5yZXBsYWNlKC9cXHI/XFxufFxcci9nLCBcIlwiKS5yZXBsYWNlKC9cXHUwMGEwL2csIFwiIFwiKTtcbiAgICAgICAgZXZlbnQuY2xpcGJvYXJkRGF0YS5zZXREYXRhKCd0ZXh0L3BsYWluJywgcmVmaW5lZCk7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgfVxufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///46\n')})()})();