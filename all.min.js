(()=>{"use strict";var __webpack_modules__={558:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "html,\\nbody,\\n#base {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0;\\n}\\n.holder {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n}\\n.ins {\\n  cursor: default;\\n  user-select: none;\\n}\\n#base {\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n}\\n#header {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: column;\\n  height: 25%;\\n  background-color: #f1f1f1;\\n}\\n#footer {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  height: 5%;\\n}\\n.for-black {\\n  color: black;\\n}\\n.back-black {\\n  background: black;\\n}\\n.for-red {\\n  color: red;\\n}\\n.back-red {\\n  background: red;\\n}\\n.for-green {\\n  color: green;\\n}\\n.back-green {\\n  background: green;\\n}\\n.for-yellow {\\n  color: yellow;\\n}\\n.back-yellow {\\n  background: yellow;\\n}\\n.for-blue {\\n  color: blue;\\n}\\n.back-blue {\\n  background: blue;\\n}\\n.for-magenta {\\n  color: magenta;\\n}\\n.back-magenta {\\n  background: magenta;\\n}\\n.for-cyan {\\n  color: cyan;\\n}\\n.back-cyan {\\n  background: cyan;\\n}\\n.for-white {\\n  color: white;\\n}\\n.back-white {\\n  background: white;\\n}\\n.sty-bold {\\n  font-weight: 700;\\n}\\n.sty-normal {\\n  font-weight: 400;\\n}\\n.sty-dim {\\n  font-weight: 100;\\n}\\n@keyframes blink {\\n  50% {\\n    color: transparent;\\n  }\\n}\\n.blink {\\n  animation: blink 1s step-end 0s infinite;\\n}\\n.cross {\\n  text-decoration: line-through;\\n}\\n.under {\\n  border-bottom: 2px solid currentColor;\\n}\\n.ita {\\n  font-style: italic;\\n}\\n", "",{"version":3,"sources":["webpack://./styles/main.less","webpack://./styles/formatting.less"],"names":[],"mappings":"AAMA;;;EACI,WAAA;EACA,YAAA;EACA,SAAA;ACHJ;ADMA;EACI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ACJJ;ADSA;EACI,eAAA;EACA,iBAAA;ACPJ;ADYA;EACI,gBAAA;EACA,aAAA;EACA,sBAAA;ACVJ;ADaA;EArBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EAoBA,sBAAA;EACA,WAAA;EACA,yBAAA;ACRJ;ADWA;EA5BI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EA2BA,UAAA;ACNJ;ADrCC;ECKG,YAAA;AAmCJ;ADxCC;ECQG,iBAAA;AAmCJ;AD3CC;ECKG,UAAA;AAyCJ;AD9CC;ECQG,eAAA;AAyCJ;ADjDC;ECKG,YAAA;AA+CJ;ADpDC;ECQG,iBAAA;AA+CJ;ADvDC;ECKG,aAAA;AAqDJ;AD1DC;ECQG,kBAAA;AAqDJ;AD7DC;ECKG,WAAA;AA2DJ;ADhEC;ECQG,gBAAA;AA2DJ;ADnEC;ECKG,cAAA;AAiEJ;ADtEC;ECQG,mBAAA;AAiEJ;ADzEC;ECKG,WAAA;AAuEJ;AD5EC;ECQG,gBAAA;AAuEJ;AD/EC;ECKG,YAAA;AA6EJ;ADlFC;ECQG,iBAAA;AA6EJ;ADrFC;ECeG,gBAAA;AAyEJ;ADxFC;ECeG,gBAAA;AA4EJ;AD3FC;ECeG,gBAAA;AA+EJ;AA3EA;EACE;IAAM,kBAAA;EA8EN;AACF;AA7EA;EACE,wCAAA;AA+EF;AA5EA;EACE,6BAAA;AA8EF;AA3EA;EACE,qCAAA;AA6EF;AA1EA;EACE,kBAAA;AA4EF","sourcesContent":["@bold: 700;\\n@normal: 400;\\n@dim: 100;\\n\\n\\n\\nhtml, body, #base {\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n}\\n\\n.holder {\\n    width: 100%;\\n    margin: 0;\\n    display: flex;\\n    box-sizing: border-box;\\n}\\n\\n\\n\\n.ins {\\n    cursor: default;\\n    user-select: none;\\n}\\n\\n\\n\\n#base {\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#header {\\n    .holder();\\n    flex-direction: column;\\n    height: 25%;\\n    background-color: #f1f1f1;\\n}\\n\\n#footer {\\n    .holder();\\n    height: 5%;\\n}\\n","@import \\"main.less\\";\\n\\n//@colors: black, red, green, yellow, blue, magenta, cyan, white;\\neach(@colors, {\\n  .for-@{value} {\\n    color: @value;\\n  }\\n  .back-@{value} {\\n    background: @value;\\n  }\\n});\\n\\n//@styles: bold - 700, normal - 400, dim  - 100;\\neach(@styles, {\\n  .sty-@{value} {\\n    font-weight: @@value;\\n  }\\n});\\n\\n@keyframes blink {\\n  50% { color: transparent; }\\n}\\n.blink {\\n  animation: blink 1s step-end 0s infinite;\\n}\\n\\n.cross {\\n  text-decoration: line-through;\\n}\\n\\n.under {\\n  border-bottom: 2px solid currentColor;\\n}\\n\\n.ita {\\n  font-style: italic;\\n}\\n\\n// обрамленный, окруженный, надчеркнутый\\n\\n@colors: black,red,green,yellow,blue,magenta,cyan,white;@styles: bold,normal,dim;@def-for: white;@def-back: black;@def-sty: normal;"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///558\n')},6:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "html,\\nbody,\\n#base {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0;\\n}\\n.holder {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n}\\n.ins {\\n  cursor: default;\\n  user-select: none;\\n}\\n#base {\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n}\\n#header {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: column;\\n  height: 25%;\\n  background-color: #f1f1f1;\\n}\\n#footer {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  height: 5%;\\n}\\n", "",{"version":3,"sources":["webpack://./styles/main.less"],"names":[],"mappings":"AAMA;;;EACI,WAAA;EACA,YAAA;EACA,SAAA;AAHJ;AAMA;EACI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;AAJJ;AASA;EACI,eAAA;EACA,iBAAA;AAPJ;AAYA;EACI,gBAAA;EACA,aAAA;EACA,sBAAA;AAVJ;AAaA;EArBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EAoBA,sBAAA;EACA,WAAA;EACA,yBAAA;AARJ;AAWA;EA5BI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EA2BA,UAAA;AANJ","sourcesContent":["@bold: 700;\\n@normal: 400;\\n@dim: 100;\\n\\n\\n\\nhtml, body, #base {\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n}\\n\\n.holder {\\n    width: 100%;\\n    margin: 0;\\n    display: flex;\\n    box-sizing: border-box;\\n}\\n\\n\\n\\n.ins {\\n    cursor: default;\\n    user-select: none;\\n}\\n\\n\\n\\n#base {\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#header {\\n    .holder();\\n    flex-direction: column;\\n    height: 25%;\\n    background-color: #f1f1f1;\\n}\\n\\n#footer {\\n    .holder();\\n    height: 5%;\\n}\\n\\n@colors: black,red,green,yellow,blue,magenta,cyan,white;@styles: bold,normal,dim;@def-for: white;@def-back: black;@def-sty: normal;"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcmVhdGUtbG9nZ2VyLy4vc3R5bGVzL21haW4ubGVzcz85NjQwIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNzSDtBQUM3QjtBQUN6Riw4QkFBOEIsbUZBQTJCLENBQUMsd0dBQXFDO0FBQy9GO0FBQ0EsK0RBQStELGdCQUFnQixpQkFBaUIsY0FBYyxHQUFHLFdBQVcsZ0JBQWdCLGNBQWMsa0JBQWtCLDJCQUEyQixHQUFHLFFBQVEsb0JBQW9CLHNCQUFzQixHQUFHLFNBQVMscUJBQXFCLGtCQUFrQiwyQkFBMkIsR0FBRyxXQUFXLGdCQUFnQixjQUFjLGtCQUFrQiwyQkFBMkIsMkJBQTJCLGdCQUFnQiw4QkFBOEIsR0FBRyxXQUFXLGdCQUFnQixjQUFjLGtCQUFrQiwyQkFBMkIsZUFBZSxHQUFHLFNBQVMscUZBQXFGLFVBQVUsVUFBVSxVQUFVLEtBQUssS0FBSyxVQUFVLFVBQVUsVUFBVSxXQUFXLEtBQUssS0FBSyxVQUFVLFdBQVcsS0FBSyxLQUFLLFdBQVcsVUFBVSxXQUFXLEtBQUssS0FBSyxXQUFXLFVBQVUsVUFBVSxXQUFXLFlBQVksVUFBVSxXQUFXLEtBQUssS0FBSyxXQUFXLFVBQVUsVUFBVSxXQUFXLFdBQVcsb0NBQW9DLGVBQWUsWUFBWSwyQkFBMkIsa0JBQWtCLG1CQUFtQixnQkFBZ0IsR0FBRyxhQUFhLGtCQUFrQixnQkFBZ0Isb0JBQW9CLDZCQUE2QixHQUFHLGNBQWMsc0JBQXNCLHdCQUF3QixHQUFHLGVBQWUsdUJBQXVCLG9CQUFvQiw2QkFBNkIsR0FBRyxhQUFhLGdCQUFnQiw2QkFBNkIsa0JBQWtCLGdDQUFnQyxHQUFHLGFBQWEsZ0JBQWdCLGlCQUFpQixHQUFHLDREQUE0RCx5QkFBeUIsZ0JBQWdCLGlCQUFpQixpQkFBaUIsbUJBQW1CO0FBQzNxRDtBQUNBLGlFQUFlLHVCQUF1QixFQUFDIiwiZmlsZSI6IjYuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcImh0bWwsXFxuYm9keSxcXG4jYmFzZSB7XFxuICB3aWR0aDogMTAwJTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIG1hcmdpbjogMDtcXG59XFxuLmhvbGRlciB7XFxuICB3aWR0aDogMTAwJTtcXG4gIG1hcmdpbjogMDtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG4uaW5zIHtcXG4gIGN1cnNvcjogZGVmYXVsdDtcXG4gIHVzZXItc2VsZWN0OiBub25lO1xcbn1cXG4jYmFzZSB7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcbiNoZWFkZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW46IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBoZWlnaHQ6IDI1JTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XFxufVxcbiNmb290ZXIge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBtYXJnaW46IDA7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIGhlaWdodDogNSU7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3N0eWxlcy9tYWluLmxlc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBTUE7OztFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsU0FBQTtBQUhKO0FBTUE7RUFDSSxXQUFBO0VBQ0EsU0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtBQUpKO0FBU0E7RUFDSSxlQUFBO0VBQ0EsaUJBQUE7QUFQSjtBQVlBO0VBQ0ksZ0JBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7QUFWSjtBQWFBO0VBckJJLFdBQUE7RUFDQSxTQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBb0JBLHNCQUFBO0VBQ0EsV0FBQTtFQUNBLHlCQUFBO0FBUko7QUFXQTtFQTVCSSxXQUFBO0VBQ0EsU0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQTJCQSxVQUFBO0FBTkpcIixcInNvdXJjZXNDb250ZW50XCI6W1wiQGJvbGQ6IDcwMDtcXG5Abm9ybWFsOiA0MDA7XFxuQGRpbTogMTAwO1xcblxcblxcblxcbmh0bWwsIGJvZHksICNiYXNlIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTtcXG4gICAgbWFyZ2luOiAwO1xcbn1cXG5cXG4uaG9sZGVyIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuXFxuXFxuLmlucyB7XFxuICAgIGN1cnNvcjogZGVmYXVsdDtcXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxufVxcblxcblxcblxcbiNiYXNlIHtcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuXFxuI2hlYWRlciB7XFxuICAgIC5ob2xkZXIoKTtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgaGVpZ2h0OiAyNSU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7XFxufVxcblxcbiNmb290ZXIge1xcbiAgICAuaG9sZGVyKCk7XFxuICAgIGhlaWdodDogNSU7XFxufVxcblxcbkBjb2xvcnM6IGJsYWNrLHJlZCxncmVlbix5ZWxsb3csYmx1ZSxtYWdlbnRhLGN5YW4sd2hpdGU7QHN0eWxlczogYm9sZCxub3JtYWwsZGltO0BkZWYtZm9yOiB3aGl0ZTtAZGVmLWJhY2s6IGJsYWNrO0BkZWYtc3R5OiBub3JtYWw7XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///6\n')},44:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "html,\\nbody,\\n#base {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0;\\n}\\n.holder {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n}\\n.ins {\\n  cursor: default;\\n  user-select: none;\\n}\\n#base {\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n}\\n#header {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: column;\\n  height: 25%;\\n  background-color: #f1f1f1;\\n}\\n#footer {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  height: 5%;\\n}\\n#tab-links {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  min-height: 30%;\\n  border-bottom: 1px solid #ccc;\\n}\\n.tab-link {\\n  background-color: inherit;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 14px 16px;\\n  transition: 0.3s;\\n  user-select: none;\\n}\\n.tab-link:hover {\\n  background-color: #ddd;\\n}\\n.tab-links:active {\\n  background-color: #ccc;\\n}\\n#tab-contents {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  max-height: 70%;\\n  height: 70%;\\n  padding: 0.5rem;\\n}\\n.tab-content {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  height: 100%;\\n  display: none;\\n}\\n#preview-content {\\n  height: 0;\\n}\\n.tile {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\n.tile + .tile {\\n  margin-left: 0.5rem;\\n}\\n.gr {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: row;\\n}\\n.gr-in {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: column;\\n}\\n.gr-in + .gr-in {\\n  margin-top: 0.5rem;\\n}\\n.tile-set-left {\\n  display: flex;\\n  height: 100%;\\n  width: 35%;\\n  justify-content: center;\\n  justify-content: flex-start;\\n}\\n.tile-set-center {\\n  display: flex;\\n  height: 100%;\\n  width: 35%;\\n  justify-content: center;\\n  width: 30%;\\n}\\n.tile-set-right {\\n  display: flex;\\n  height: 100%;\\n  width: 35%;\\n  justify-content: center;\\n  justify-content: flex-end;\\n}\\n.preset_example {\\n  cursor: pointer;\\n  user-select: none;\\n}\\ninput[type=\'radio\'] + label {\\n  position: relative;\\n}\\n", "",{"version":3,"sources":["webpack://./styles/main.less","webpack://./styles/tabs.less"],"names":[],"mappings":"AAMA;;;EACI,WAAA;EACA,YAAA;EACA,SAAA;ACHJ;ADMA;EACI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ACJJ;ADSA;EACI,eAAA;EACA,iBAAA;ACPJ;ADYA;EACI,gBAAA;EACA,aAAA;EACA,sBAAA;ACVJ;ADaA;EArBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EAoBA,sBAAA;EACA,WAAA;EACA,yBAAA;ACRJ;ADWA;EA5BI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EA2BA,UAAA;ACNJ;AAjCA;EDSI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECVF,eAAA;EACA,6BAAA;AAsCF;AAnCA;EACE,yBAAA;EACA,YAAA;EACA,aAAA;EACA,eAAA;EACA,kBAAA;EACA,gBAAA;EACA,iBAAA;AAqCF;AAlCA;EACE,sBAAA;AAoCF;AAjCA;EACE,sBAAA;AAmCF;AA9BA;EDjBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECgBF,eAAA;EACA,WAAA;EACA,eAAA;AAmCF;AAhCA;EDxBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECuBF,YAAA;EACA,aAAA;AAqCF;AAlCA;EACE,SAAA;AAoCF;AA/BA;EACE,aAAA;EACA,sBAAA;EACA,YAAA;AAiCF;AApCA;EAKI,mBAAA;AAkCJ;AA9BA;ED7CI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EC4CF,mBAAA;AAmCF;AAhCA;EDlDI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECiDF,sBAAA;AAqCF;AAvCA;EAII,kBAAA;AAsCJ;AAzBA;EANE,aAAA;EACA,YAAA;EACA,UAAA;EACA,uBAAA;EAKA,2BAAA;AA8BF;AA3BA;EAXE,aAAA;EACA,YAAA;EACA,UAAA;EACA,uBAAA;EAUA,UAAA;AAgCF;AA7BA;EAhBE,aAAA;EACA,YAAA;EACA,UAAA;EACA,uBAAA;EAeA,yBAAA;AAkCF;AA7BA;EACE,eAAA;EACA,iBAAA;AA+BF;AA1BA;EACE,kBAAA;AA4BF","sourcesContent":["@bold: 700;\\n@normal: 400;\\n@dim: 100;\\n\\n\\n\\nhtml, body, #base {\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n}\\n\\n.holder {\\n    width: 100%;\\n    margin: 0;\\n    display: flex;\\n    box-sizing: border-box;\\n}\\n\\n\\n\\n.ins {\\n    cursor: default;\\n    user-select: none;\\n}\\n\\n\\n\\n#base {\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#header {\\n    .holder();\\n    flex-direction: column;\\n    height: 25%;\\n    background-color: #f1f1f1;\\n}\\n\\n#footer {\\n    .holder();\\n    height: 5%;\\n}\\n","@import \\"main.less\\";\\n\\n\\n\\n#tab-links {\\n  .holder();\\n  min-height: 30%;\\n  border-bottom: 1px solid #ccc;\\n}\\n\\n.tab-link {\\n  background-color: inherit;\\n  border: none;\\n  outline: none;\\n  cursor: pointer;\\n  padding: 14px 16px;\\n  transition: 0.3s;\\n  user-select: none;\\n}\\n\\n.tab-link:hover {\\n  background-color: #ddd;\\n}\\n\\n.tab-links:active {\\n  background-color: #ccc;\\n}\\n\\n\\n\\n#tab-contents {\\n  .holder();\\n  max-height: 70%;\\n  height: 70%;\\n  padding: .5rem;\\n}\\n\\n.tab-content {\\n  .holder();\\n  height: 100%;\\n  display: none;\\n}\\n\\n#preview-content {\\n  height: 0;\\n}\\n\\n\\n\\n.tile {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n  + .tile {\\n    margin-left: .5rem;\\n  }\\n}\\n\\n.gr {\\n  .holder();\\n  flex-direction: row;\\n}\\n\\n.gr-in {\\n  .holder();\\n  flex-direction: column;\\n  + .gr-in {\\n    margin-top: .5rem;\\n  }\\n}\\n\\n\\n\\n.tile-set() {\\n  display: flex;\\n  height: 100%;\\n  width: 35%;\\n  justify-content: center;\\n}\\n\\n.tile-set-left {\\n  .tile-set();\\n  justify-content: flex-start;\\n}\\n\\n.tile-set-center {\\n  .tile-set();\\n  width: 30%;\\n}\\n\\n.tile-set-right {\\n  .tile-set();\\n  justify-content: flex-end;\\n}\\n\\n\\n\\n.preset_example {\\n  cursor: pointer;\\n  user-select: none;\\n}\\n\\n\\n\\ninput[type=\'radio\'] + label {\\n  position: relative;\\n}\\n\\n@colors: black,red,green,yellow,blue,magenta,cyan,white;@styles: bold,normal,dim;@def-for: white;@def-back: black;@def-sty: normal;"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///44\n')},432:(module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Z": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(15);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(645);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, "html,\\nbody,\\n#base {\\n  width: 100%;\\n  height: 100%;\\n  margin: 0;\\n}\\n.holder {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n}\\n.ins {\\n  cursor: default;\\n  user-select: none;\\n}\\n#base {\\n  overflow: hidden;\\n  display: flex;\\n  flex-direction: column;\\n}\\n#header {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: column;\\n  height: 25%;\\n  background-color: #f1f1f1;\\n}\\n#footer {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  height: 5%;\\n}\\n#terminal {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  min-height: 70%;\\n  flex: 2;\\n  flex-direction: column;\\n  overflow: auto;\\n  font-family: \'Courier New\', monospace;\\n  font-size: small;\\n  background-color: black;\\n  color: white;\\n  font-weight: 400;\\n}\\n.line {\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  flex-direction: row;\\n  height: 1rem;\\n  width: 100%;\\n  margin: 0 0 0.5rem;\\n}\\n.line-number {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  width: 5%;\\n  cursor: pointer;\\n  user-select: none;\\n}\\n.line-content {\\n  width: 100%;\\n  margin: 0;\\n  display: flex;\\n  box-sizing: border-box;\\n  width: 95%;\\n  flex-grow: 1;\\n}\\n:not([class~=chosen]) + [class~=line-content] {\\n  user-select: none;\\n}\\n[contenteditable] {\\n  outline: 0 solid transparent;\\n}\\n", "",{"version":3,"sources":["webpack://./styles/main.less","webpack://./styles/terminal.less"],"names":[],"mappings":"AAMA;;;EACI,WAAA;EACA,YAAA;EACA,SAAA;ACHJ;ADMA;EACI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ACJJ;ADSA;EACI,eAAA;EACA,iBAAA;ACPJ;ADYA;EACI,gBAAA;EACA,aAAA;EACA,sBAAA;ACVJ;ADaA;EArBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EAoBA,sBAAA;EACA,WAAA;EACA,yBAAA;ACRJ;ADWA;EA5BI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;EA2BA,UAAA;ACNJ;AAjCA;EDSI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECVF,eAAA;EACA,OAAA;EACA,sBAAA;EACA,cAAA;EAEA,qCAAA;EACA,gBAAA;EAEA,uBAAA;EACA,YAAA;EACA,gBAAA;AAoCF;AAjCA;EDLI,SAAA;EACA,aAAA;EACA,sBAAA;ECKF,mBAAA;EACA,YAAA;EACA,WAAA;EACA,kBAAA;AAqCF;AAlCA;EDdI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECaF,SAAA;EACA,eAAA;EACA,iBAAA;AAuCF;AApCA;EDrBI,WAAA;EACA,SAAA;EACA,aAAA;EACA,sBAAA;ECoBF,UAAA;EACA,YAAA;AAyCF;AApCA;EACE,iBAAA;AAsCF;AAhCA;EACE,4BAAA;AAkCF","sourcesContent":["@bold: 700;\\n@normal: 400;\\n@dim: 100;\\n\\n\\n\\nhtml, body, #base {\\n    width: 100%;\\n    height: 100%;\\n    margin: 0;\\n}\\n\\n.holder {\\n    width: 100%;\\n    margin: 0;\\n    display: flex;\\n    box-sizing: border-box;\\n}\\n\\n\\n\\n.ins {\\n    cursor: default;\\n    user-select: none;\\n}\\n\\n\\n\\n#base {\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n#header {\\n    .holder();\\n    flex-direction: column;\\n    height: 25%;\\n    background-color: #f1f1f1;\\n}\\n\\n#footer {\\n    .holder();\\n    height: 5%;\\n}\\n","@import \\"main.less\\";\\n\\n\\n\\n#terminal {\\n  .holder();\\n  min-height: 70%;\\n  flex: 2;\\n  flex-direction: column;\\n  overflow: auto;\\n\\n  font-family: \'Courier New\', monospace;\\n  font-size: small;\\n\\n  background-color: @def-back;\\n  color: @def-for;\\n  font-weight: @@def-sty;\\n}\\n\\n.line {\\n  .holder();\\n  flex-direction: row;\\n  height: 1rem;\\n  width: 100%;\\n  margin: 0 0 .5rem;\\n}\\n\\n.line-number {\\n  .holder();\\n  width: 5%;\\n  cursor: pointer;\\n  user-select: none;\\n}\\n\\n.line-content {\\n  .holder();\\n  width: 95%;\\n  flex-grow: 1;\\n}\\n\\n\\n\\n:not([class~=chosen])+[class~=line-content] {\\n  user-select: none;\\n  // background: aqua;\\n}\\n\\n\\n\\n[contenteditable] {\\n  outline: 0 solid transparent;\\n}\\n\\n@colors: black,red,green,yellow,blue,magenta,cyan,white;@styles: bold,normal,dim;@def-for: white;@def-back: black;@def-sty: normal;"],"sourceRoot":""}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///432\n')},645:module=>{eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], " {").concat(content, "}");\n      }\n\n      return content;\n    }).join(\'\');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \'string\') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \'\']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcmVhdGUtbG9nZ2VyLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcz8yNGZiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCOztBQUVoQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw0Q0FBNEMscUJBQXFCO0FBQ2pFOztBQUVBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLHFCQUFxQixpQkFBaUI7QUFDdEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9CQUFvQixxQkFBcUI7QUFDekM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSIsImZpbGUiOiI2NDUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSAnc3RyaW5nJykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCAnJ11dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///645\n')},15:module=>{eval('\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (typeof btoa === \'function\') {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n    var sourceMapping = "/*# ".concat(data, " */");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot || \'\').concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcmVhdGUtbG9nZ2VyLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanM/NzVlOSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixpQ0FBaUMsMkhBQTJIOztBQUU1Siw2QkFBNkIsa0tBQWtLOztBQUUvTCxpREFBaUQsZ0JBQWdCLGdFQUFnRSx3REFBd0QsNkRBQTZELHNEQUFzRCxrSEFBa0g7O0FBRTlaLHNDQUFzQyx1REFBdUQsdUNBQXVDLFNBQVMsT0FBTyxrQkFBa0IsRUFBRSxhQUFhOztBQUVyTCx3Q0FBd0MsZ0ZBQWdGLGVBQWUsZUFBZSxnQkFBZ0Isb0JBQW9CLE1BQU0sMENBQTBDLCtCQUErQixhQUFhLHFCQUFxQixtQ0FBbUMsRUFBRSxFQUFFLGNBQWMsV0FBVyxVQUFVLEVBQUUsVUFBVSxNQUFNLGlEQUFpRCxFQUFFLFVBQVUsa0JBQWtCLEVBQUUsRUFBRSxhQUFhOztBQUV2ZSwrQkFBK0Isb0NBQW9DOztBQUVuRTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6IjE1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcInVuZGVmaW5lZFwiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKSB7XG4gIHZhciBfaXRlbSA9IF9zbGljZWRUb0FycmF5KGl0ZW0sIDQpLFxuICAgICAgY29udGVudCA9IF9pdGVtWzFdLFxuICAgICAgY3NzTWFwcGluZyA9IF9pdGVtWzNdO1xuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCAnJykuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///15\n')},379:(module,__unused_webpack_exports,__webpack_require__)=>{eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///379\n")}},__webpack_module_cache__={};function __webpack_require__(Q){if(__webpack_module_cache__[Q])return __webpack_module_cache__[Q].exports;var n=__webpack_module_cache__[Q]={id:Q,exports:{}};return __webpack_modules__[Q](n,n.exports,__webpack_require__),n.exports}__webpack_require__.n=Q=>{var n=Q&&Q.__esModule?()=>Q.default:()=>Q;return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=(Q,n)=>{for(var F in n)__webpack_require__.o(n,F)&&!__webpack_require__.o(Q,F)&&Object.defineProperty(Q,F,{enumerable:!0,get:n[F]})},__webpack_require__.o=(Q,n)=>Object.prototype.hasOwnProperty.call(Q,n),(()=>{eval('\n// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\nvar injectStylesIntoStyleTag = __webpack_require__(379);\nvar injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles/formatting.less\nvar formatting = __webpack_require__(558);\n;// CONCATENATED MODULE: ./styles/formatting.less\n\n            \n\nvar options = {};\n\noptions.insert = "head";\noptions.singleton = false;\n\nvar update = injectStylesIntoStyleTag_default()(formatting/* default */.Z, options);\n\n\n\n/* harmony default export */ const styles_formatting = (formatting/* default.locals */.Z.locals || {});\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles/main.less\nvar main = __webpack_require__(6);\n;// CONCATENATED MODULE: ./styles/main.less\n\n            \n\nvar main_options = {};\n\nmain_options.insert = "head";\nmain_options.singleton = false;\n\nvar main_update = injectStylesIntoStyleTag_default()(main/* default */.Z, main_options);\n\n\n\n/* harmony default export */ const styles_main = (main/* default.locals */.Z.locals || {});\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles/tabs.less\nvar tabs = __webpack_require__(44);\n;// CONCATENATED MODULE: ./styles/tabs.less\n\n            \n\nvar tabs_options = {};\n\ntabs_options.insert = "head";\ntabs_options.singleton = false;\n\nvar tabs_update = injectStylesIntoStyleTag_default()(tabs/* default */.Z, tabs_options);\n\n\n\n/* harmony default export */ const styles_tabs = (tabs/* default.locals */.Z.locals || {});\n// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./styles/terminal.less\nvar terminal = __webpack_require__(432);\n;// CONCATENATED MODULE: ./styles/terminal.less\n\n            \n\nvar terminal_options = {};\n\nterminal_options.insert = "head";\nterminal_options.singleton = false;\n\nvar terminal_update = injectStylesIntoStyleTag_default()(terminal/* default */.Z, terminal_options);\n\n\n\n/* harmony default export */ const styles_terminal = (terminal/* default.locals */.Z.locals || {});\n;// CONCATENATED MODULE: ./scripts/imports.ts\n// STYLES:\n\n\n\n // LANGUAGES:\n;// CONCATENATED MODULE: ./langs/javascript.ts\nfunction construct(language, str) {}\n;// CONCATENATED MODULE: ./consts/langs.ts\n\nvar LANGUAGES = {\n  javascript: construct\n};\nvar TYPES = {\n  "int": "Integer",\n  "float": "Floating point number",\n  "char": "Character",\n  string: "String",\n  int_array: "Array of integers",\n  string_array: "Array strings"\n};\nfunction langs_construct(language, str) {\n  return LANGUAGES[language](str);\n}\n;// CONCATENATED MODULE: ./consts/babylon.ts\nvar TRANSLATIONS = {\n  english: "English 🇬🇧"\n};\nvar LITERALS = {};\n;// CONCATENATED MODULE: ./consts/constants.ts\n\n\nvar SEPARATOR = \'-\';\nvar COLORS = {\n  black: "0",\n  red: "1",\n  green: "2",\n  yellow: "3",\n  blue: "4",\n  magenta: "5",\n  cyan: "6",\n  white: "7"\n};\nvar STYLES = {\n  bold: "1",\n  normal: "22",\n  dim: "2"\n};\nvar DEFAULTS = {\n  "for": "white",\n  back: "black",\n  sty: "normal"\n}; // These below are not exported to PUG or LESS as they are keys for specific classes:\n\nvar PREFIXES = {\n  "for": "3",\n  back: "4",\n  sty: "",\n  blink: "5",\n  cross: "9",\n  under: "4",\n  ita: "3"\n};\nfunction getPrefix(cls) {\n  if (cls.includes(SEPARATOR)) return cls.split(SEPARATOR)[0];else return cls;\n}\nfunction getPostfix(cls) {\n  if (cls.includes(SEPARATOR)) return cls.split(SEPARATOR)[1];else return "";\n}\nfunction multiplePrefix(pref) {\n  return pref === \'for\' || pref === \'back\' || pref === \'sty\';\n}\n\nfunction generateClassCodes() {\n  var codes = {};\n\n  for (var prefix in PREFIXES) {\n    if (prefix === \'for\' || prefix === \'back\') for (var color in COLORS) {\n      codes[prefix + SEPARATOR + color] = PREFIXES[prefix] + COLORS[color];\n    } else if (prefix === \'sty\') for (var styles in STYLES) {\n      codes[prefix + SEPARATOR + styles] = PREFIXES[prefix] + STYLES[styles];\n    } else codes[prefix] = PREFIXES[prefix];\n  }\n\n  return codes;\n}\n\nvar CLASS_CODES = generateClassCodes(); // For passing variables to LESS:\n\nvar LESS_VARS = {\n  colors: Object.keys(COLORS),\n  styles: Object.keys(STYLES)\n};\nObject.keys(DEFAULTS).forEach(function (value) {\n  LESS_VARS["def-" + value] = DEFAULTS[value];\n}); // For passing variables to PUG:\n\nvar PUG_VARS = {\n  colors: Object.keys(COLORS),\n  styles: Object.keys(STYLES),\n  languages: LANGUAGES,\n  types: TYPES,\n  literals: LITERALS,\n  translations: TRANSLATIONS\n};\n;// CONCATENATED MODULE: ./scripts/utils.ts\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n// ARRAY utils:\nfunction areArraysEqual(a, b) {\n  if (!a || !b) return false;\n  if (a.length !== b.length) return false;\n  a.sort();\n  b.sort();\n\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n\n  return true;\n}\nfunction getSameElements(a, b) {\n  if (areArraysEqual(a, b)) return a;\n  return _toConsumableArray(a).filter(function (value) {\n    return b.includes(value);\n  });\n} // RANGE utils:\n\nfunction children(node) {\n  var nodes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  node.childNodes.forEach(function (value) {\n    nodes.push(value);\n    if (value.hasChildNodes()) children(value, nodes);\n  });\n  return nodes;\n}\n\nfunction setRangeInNode(range, node, pos) {\n  var position = pos !== undefined ? Math.min(pos, node.textContent.length) : node.textContent.length;\n  setRangeStartInNode(range, node, position);\n  range.collapse(true);\n}\n\nfunction setRangeAnythingInNode(range, node, pos, start) {\n  if (node.nodeType == Node.TEXT_NODE || !children(node).some(function (value) {\n    if (value.nodeType == Node.TEXT_NODE) {\n      if (value.textContent.length >= pos) {\n        if (start) range.setStart(value, pos);else range.setEnd(value, pos);\n        return true;\n      } else {\n        pos -= value.textContent.length;\n        return false;\n      }\n    } else return false;\n  })) {\n    if (start) range.setStart(node, pos);else range.setEnd(node, pos);\n  }\n}\n\nfunction setRangeStartInNode(range, node, pos) {\n  setRangeAnythingInNode(range, node, pos, true);\n}\nfunction setRangeEndInNode(range, node, pos) {\n  setRangeAnythingInNode(range, node, pos, false);\n}\n\nfunction nodesInChars(before, parent) {\n  var desc = children(parent);\n  var max_index = before === null ? desc.length : desc.findIndex(function (value) {\n    return value == before;\n  });\n  var node;\n  var node_offset = 0;\n\n  if (!!before) {\n    node = before;\n  } else if (desc.length > 0) {\n    node = desc[desc.length - 1];\n    node_offset = node.textContent.length;\n  } else {\n    node = parent;\n  }\n\n  return {\n    offset: desc.reduce(function (previous, value, index) {\n      if (index < max_index && value.nodeType == Node.TEXT_NODE) return previous + value.textContent.length;else return previous;\n    }, 0),\n    node: node,\n    node_offset: node_offset\n  };\n}\n\nfunction getRangeAnythingInNode(anchor, off, node) {\n  if (node.contains(anchor)) {\n    if (node == anchor) {\n      if (node.nodeType == Node.TEXT_NODE) return {\n        offset: off,\n        node: node,\n        node_offset: off\n      };else return nodesInChars(off == node.childNodes.length ? null : node.childNodes[off], node);\n    } else {\n      var info = getRangeAnythingInNode(anchor, off, anchor);\n\n      var _nodesInChars = nodesInChars(anchor, node),\n          offset = _nodesInChars.offset;\n\n      return {\n        offset: offset + info.offset,\n        node: info.node,\n        node_offset: info.node_offset\n      };\n    }\n  } else return null;\n}\n\nfunction getRangeStartInNode(range, parent) {\n  var _getRangeAnythingInNo = getRangeAnythingInNode(range.startContainer, range.startOffset, parent),\n      offset = _getRangeAnythingInNo.offset,\n      node = _getRangeAnythingInNo.node,\n      node_offset = _getRangeAnythingInNo.node_offset;\n\n  return {\n    start: offset,\n    first: node,\n    f_off: node_offset\n  };\n}\nfunction getRangeEndInNode(range, parent) {\n  var _getRangeAnythingInNo2 = getRangeAnythingInNode(range.endContainer, range.endOffset, parent),\n      offset = _getRangeAnythingInNo2.offset,\n      node = _getRangeAnythingInNo2.node,\n      node_offset = _getRangeAnythingInNo2.node_offset;\n\n  return {\n    end: offset,\n    last: node,\n    l_off: node_offset\n  };\n}\nfunction getFocusOffsetInNode(selection, parent) {\n  var range = selection.getRangeAt(0);\n  if (selection.focusNode == range.startContainer && selection.focusOffset == range.startOffset) return getRangeStartInNode(range, parent).start;else return getRangeEndInNode(range, parent).end;\n}\n;// CONCATENATED MODULE: ./scripts/converter.ts\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = converter_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction converter_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return converter_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return converter_arrayLikeToArray(o, minLen); }\n\nfunction converter_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\nvar ESCAPE_START = "\\\\033[";\nvar ESCAPE_SEPARATOR = ";";\nvar ESCAPE_END = "m";\nvar ESCAPE_TERMINATE = "0"; //TODO: Reverse for file reading.\n\nfunction classesToStyles(classes) {\n  var styles = [];\n\n  var _iterator = _createForOfIteratorHelper(classes),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var cls = _step.value;\n      if (DEFAULTS[getPrefix(cls)] == getPostfix(cls)) continue;\n      styles.push(CLASS_CODES[cls]);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return styles;\n}\n\nfunction convert(str) {\n  var result = "";\n  var previousClasses = [];\n\n  var _iterator2 = _createForOfIteratorHelper(str),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var entry = _step2.value;\n      var styles = classesToStyles(entry.classes);\n      var interior = "";\n\n      if (!areArraysEqual(previousClasses, styles)) {\n        if (previousClasses.length > 0) interior += ESCAPE_START + ESCAPE_TERMINATE + ESCAPE_END;\n\n        if (styles.length > 0) {\n          interior += ESCAPE_START;\n          interior += styles.join(ESCAPE_SEPARATOR);\n          interior += ESCAPE_END;\n        }\n      }\n\n      interior += entry.value;\n      result += interior;\n      previousClasses = styles;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  if (previousClasses.length > 0) result += ESCAPE_START + ESCAPE_TERMINATE + ESCAPE_END;\n  return result;\n}\n;// CONCATENATED MODULE: ./scripts/terminal.ts\nfunction terminal_toConsumableArray(arr) { return terminal_arrayWithoutHoles(arr) || terminal_iterableToArray(arr) || terminal_unsupportedIterableToArray(arr) || terminal_nonIterableSpread(); }\n\nfunction terminal_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction terminal_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction terminal_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return terminal_arrayLikeToArray(arr); }\n\nfunction terminal_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = terminal_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction terminal_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return terminal_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return terminal_arrayLikeToArray(o, minLen); }\n\nfunction terminal_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\nvar terminal_terminal = document.getElementById(\'terminal\');\nvar editable = true;\nvar editableHTML;\n\nterminal_terminal.onkeydown = function (event) {\n  if (event.key === \'Enter\') {\n    event.preventDefault();\n    choose_line(create_line(get_chosen_line()));\n  } else if (event.key == \'Backspace\') {\n    var selection = document.getSelection();\n\n    if (selection.isCollapsed) {\n      var range = selection.getRangeAt(0);\n      var chosen_children = get_chosen_line_content().children;\n\n      if (range.startContainer.textContent == \'\' && chosen_children.length == 1) {\n        if (chosen_children[0].classList.length != 0) {\n          chosen_children[0].className = \'\';\n          reflect_selection();\n        }\n\n        event.preventDefault();\n      }\n    } else event.preventDefault();\n  } else if (event.key == \'ArrowUp\' || event.key == \'ArrowDown\') {\n    event.preventDefault();\n\n    var _selection = document.getSelection();\n\n    var chosen = get_chosen_line();\n    var off = _selection.rangeCount > 0 ? getFocusOffsetInNode(_selection, chosen) : undefined;\n    var target = event.key == \'ArrowUp\' ? chosen.previousElementSibling : chosen.nextElementSibling;\n    choose_line(target, off - 1);\n  }\n};\n\nfunction disableAndClear() {\n  var line_contents = document.getElementsByClassName(\'line-content\');\n\n  var _iterator = terminal_createForOfIteratorHelper(line_contents),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var content = _step.value;\n      content.setAttribute(\'contenteditable\', \'false\');\n\n      var _iterator3 = terminal_createForOfIteratorHelper(content.children),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var span = _step3.value;\n          span.setAttribute(\'contenteditable\', \'false\');\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var line_numbers = document.getElementsByClassName(\'line-number\');\n\n  var _iterator2 = terminal_createForOfIteratorHelper(line_numbers),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var number = _step2.value;\n      number.classList.remove(\'chosen\');\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n}\n\nfunction choose_line(line, pos) {\n  if (!line || !line.classList.contains(\'line\') || line.children.length != 2) return;\n  var line_number = line.firstElementChild;\n  var line_content = line.lastElementChild;\n  disableAndClear();\n  line_content.setAttribute(\'contenteditable\', \'true\');\n\n  var _iterator4 = terminal_createForOfIteratorHelper(line_content.children),\n      _step4;\n\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var child = _step4.value;\n      child.setAttribute(\'contenteditable\', \'true\');\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n\n  line_number.classList.add(\'chosen\');\n  var range = document.createRange();\n  setRangeInNode(range, line_content, pos);\n  var sel = document.getSelection();\n  sel.removeAllRanges();\n  sel.addRange(range);\n}\n\nfunction create_line() {\n  var after = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var before = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var line = document.createElement(\'div\');\n  line.classList.add(\'line\');\n  var line_number = document.createElement(\'div\');\n  line_number.classList.add(\'line-number\');\n  line_number.innerHTML = String(document.getElementsByClassName(\'line\').length);\n  var line_content = document.createElement(\'div\');\n  line_content.classList.add(\'line-content\');\n  line_content.appendChild(document.createElement(\'span\'));\n  line.append(line_number, line_content);\n  if (!!after) after.after(line);\n  if (!!before) before.before(line);\n  return line;\n}\n\nterminal_terminal.onclick = function (event) {\n  var target = event.target;\n  if (!target.parentElement.classList.contains(\'line\') || !editable) return;\n  if (target.id === \'line-adder\') choose_line(create_line(null, target.parentElement));else if (target.classList.contains(\'line-number\')) choose_line(target.parentElement);\n};\n\nfunction htmlToEntries(children) {\n  var entries = [];\n\n  var _iterator5 = terminal_createForOfIteratorHelper(children),\n      _step5;\n\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var child = _step5.value;\n      entries.push({\n        classes: terminal_toConsumableArray(child.classList),\n        value: child.textContent\n      });\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n\n  return entries;\n}\n\nfunction switchMode(edit) {\n  var line_contents = document.getElementsByClassName(\'line-content\');\n  var line_numbers = document.getElementsByClassName(\'line-number\');\n\n  if (editable && !edit) {\n    disableAndClear();\n    editableHTML = [];\n\n    var _iterator6 = terminal_createForOfIteratorHelper(line_contents),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var content = _step6.value;\n        editableHTML.push(content.innerHTML);\n        content.innerHTML = convert(htmlToEntries(content.children));\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n\n    var _iterator7 = terminal_createForOfIteratorHelper(line_contents),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var _content = _step7.value;\n        _content.style.userSelect = \'auto\';\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    var _iterator8 = terminal_createForOfIteratorHelper(line_numbers),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var number = _step8.value;\n        number.style.cursor = \'default\';\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    document.getElementById(\'line-adder\').parentElement.style.display = \'none\';\n  } else if (!editable && edit) {\n    var _iterator9 = terminal_createForOfIteratorHelper(line_contents),\n        _step9;\n\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var _content2 = _step9.value;\n        _content2.innerHTML = editableHTML.shift();\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n\n    var _iterator10 = terminal_createForOfIteratorHelper(line_contents),\n        _step10;\n\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var _content3 = _step10.value;\n        _content3.style.userSelect = \'\';\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n\n    var _iterator11 = terminal_createForOfIteratorHelper(line_numbers),\n        _step11;\n\n    try {\n      for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n        var _number = _step11.value;\n        _number.style.cursor = \'\';\n      }\n    } catch (err) {\n      _iterator11.e(err);\n    } finally {\n      _iterator11.f();\n    }\n\n    document.getElementById(\'line-adder\').parentElement.style.display = \'\';\n  } else if (!editable && !edit) {\n    var _iterator12 = terminal_createForOfIteratorHelper(line_contents),\n        _step12;\n\n    try {\n      for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n        var _content4 = _step12.value;\n        _content4.innerHTML = "";\n      }\n    } catch (err) {\n      _iterator12.e(err);\n    } finally {\n      _iterator12.f();\n    }\n  }\n\n  editable = edit;\n}\n\nfunction get_chosen_line() {\n  return document.getElementsByClassName(\'chosen\')[0].parentElement;\n}\n\nfunction get_chosen_line_content() {\n  return get_chosen_line().lastElementChild;\n}\nfunction selection_in_place() {\n  var selectionParent = document.getSelection().getRangeAt(0).commonAncestorContainer;\n  return get_chosen_line_content().contains(selectionParent);\n}\nfunction find_span_for_place(node) {\n  if (node.nodeType == Node.TEXT_NODE) return node.parentElement;\n  if (node.nodeName != \'SPAN\') throw new DOMException("Selected wrong element: " + node.nodeName);\n  return node;\n}\n;// CONCATENATED MODULE: ./scripts/cutter.ts\nfunction cutter_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = cutter_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction cutter_toConsumableArray(arr) { return cutter_arrayWithoutHoles(arr) || cutter_iterableToArray(arr) || cutter_unsupportedIterableToArray(arr) || cutter_nonIterableSpread(); }\n\nfunction cutter_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction cutter_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return cutter_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return cutter_arrayLikeToArray(o, minLen); }\n\nfunction cutter_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction cutter_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return cutter_arrayLikeToArray(arr); }\n\nfunction cutter_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\nvar range_backup;\n\nfunction normalize(node, offset, start) {\n  var span = find_span_for_place(node);\n  if (start && offset == node.textContent.length && span.nextElementSibling != null) return {\n    node: span.nextElementSibling,\n    offset: 0\n  };\n  if (!start && offset == 0 && span.previousElementSibling != null) return {\n    node: span.previousElementSibling,\n    offset: node.textContent.length\n  };\n  return {\n    node: span,\n    offset: offset\n  };\n}\n\nfunction parse_range(range, backup) {\n  var parent = get_chosen_line_content();\n\n  var _getRangeStartInNode = getRangeStartInNode(range, parent),\n      start = _getRangeStartInNode.start,\n      first = _getRangeStartInNode.first,\n      f_off = _getRangeStartInNode.f_off;\n\n  var _getRangeEndInNode = getRangeEndInNode(range, parent),\n      end = _getRangeEndInNode.end,\n      last = _getRangeEndInNode.last,\n      l_off = _getRangeEndInNode.l_off;\n\n  if (backup) range_backup = {\n    s: start,\n    e: end\n  };\n\n  if (start == end) {\n    var f = find_span_for_place(first);\n    var l = find_span_for_place(last);\n    return {\n      first: f,\n      last: l,\n      first_offset: f_off,\n      last_offset: l_off\n    };\n  } else {\n    var _f = normalize(first, f_off, true);\n\n    var _l = normalize(last, l_off, false);\n\n    return {\n      first: _f.node,\n      last: _l.node,\n      first_offset: _f.offset,\n      last_offset: _l.offset\n    };\n  }\n}\n\nfunction restore_range(range) {\n  setRangeStartInNode(range, get_chosen_line_content(), range_backup.s);\n  setRangeEndInNode(range, get_chosen_line_content(), range_backup.e);\n} //TODO: for both elements make null "var_name" and "var_type"\n\n\nfunction splitAt(elem, pos) {\n  var postInsert = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var clone = elem.cloneNode(true);\n\n  if (!postInsert) {\n    clone.textContent = elem.textContent.slice(0, pos);\n    elem.before(clone);\n    elem.textContent = elem.textContent.slice(pos);\n  } else {\n    clone.textContent = elem.textContent.slice(pos);\n    elem.after(clone);\n    elem.textContent = elem.textContent.slice(0, pos);\n  }\n} //TODO: for both elements make null "var_name" and "var_type"\n\n\nfunction joinAround(selected) {\n  if (selected.length == 0) return;\n\n  var around = cutter_toConsumableArray(selected);\n\n  around.unshift(around[0].previousElementSibling);\n  around.push(around[around.length - 1].nextElementSibling);\n  around.forEach(function (value, index) {\n    var friend = around[index - 1];\n    if (!friend || !value) return;\n\n    if (areArraysEqual(cutter_toConsumableArray(value.classList), cutter_toConsumableArray(friend.classList))) {\n      value.textContent = friend.textContent + value.textContent;\n      friend.remove();\n    }\n  });\n}\n\nfunction getSelected(first, last) {\n  if (first == last) return [first];\n  var selected = [];\n  var current = first;\n\n  while (current != last) {\n    selected.push(current);\n    current = current.nextElementSibling;\n  }\n\n  selected.push(last);\n  return selected;\n}\n\nfunction changeClass(elem, name, val) {\n  var new_name = name + SEPARATOR + val;\n\n  var same_class = cutter_toConsumableArray(elem.classList).find(function (value) {\n    return value.startsWith(name);\n  });\n\n  if (!!same_class) elem.classList.replace(same_class, new_name);else elem.classList.add(new_name);\n}\n\nfunction change(format) {\n  if (document.getSelection().isCollapsed) return;\n\n  var cuttingStart = function cuttingStart(offset, start) {\n    return offset == 0 || offset == start.textContent.length;\n  };\n\n  var cuttingEnd = function cuttingEnd(offset, end) {\n    return offset == 0 || offset == end.textContent.length;\n  };\n\n  var range = document.getSelection().getRangeAt(0);\n\n  var _parse_range = parse_range(range, true),\n      first = _parse_range.first,\n      last = _parse_range.last,\n      first_offset = _parse_range.first_offset,\n      last_offset = _parse_range.last_offset;\n\n  if (first.isSameNode(last)) {\n    var finalOffset = last_offset - first_offset;\n    if (!cuttingStart(first_offset, first)) splitAt(first, first_offset);\n    if (!cuttingEnd(finalOffset, last)) splitAt(last, finalOffset, true);\n  } else {\n    if (!cuttingStart(first_offset, first)) splitAt(first, first_offset);\n    if (!cuttingEnd(last_offset, last)) splitAt(last, last_offset);\n  }\n\n  var selected = getSelected(first, last);\n\n  var _iterator = cutter_createForOfIteratorHelper(selected),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var child = _step.value;\n      if (multiplePrefix(format.type)) changeClass(child, format.type, format.value);else child.classList.toggle(format.type, format.value);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  joinAround(selected);\n  console.log(range_backup);\n  restore_range(range);\n}\nfunction getCommonClasses(single) {\n  if (single) return cutter_toConsumableArray(single.classList);else {\n    var range = document.getSelection().getRangeAt(0);\n\n    var _parse_range2 = parse_range(range, false),\n        first = _parse_range2.first,\n        last = _parse_range2.last;\n\n    var multiple = getSelected(first, last).map(function (value) {\n      var classes = cutter_toConsumableArray(value.classList);\n\n      var _loop = function _loop(def) {\n        var target = classes.find(function (val) {\n          return getPrefix(val) == def;\n        });\n        if (!target) classes.push(def + SEPARATOR + DEFAULTS[def]);\n      };\n\n      for (var def in DEFAULTS) {\n        _loop(def);\n      }\n\n      return classes;\n    });\n    if (multiple.length == 0) return null;\n    return multiple.reduce(function (prev, value) {\n      return getSameElements(prev, value);\n    }, multiple[0]);\n  }\n}\n;// CONCATENATED MODULE: ./scripts/tabs.ts\nfunction tabs_toConsumableArray(arr) { return tabs_arrayWithoutHoles(arr) || tabs_iterableToArray(arr) || tabs_unsupportedIterableToArray(arr) || tabs_nonIterableSpread(); }\n\nfunction tabs_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\n\nfunction tabs_iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction tabs_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return tabs_arrayLikeToArray(arr); }\n\nfunction tabs_createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = tabs_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\n\nfunction tabs_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return tabs_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return tabs_arrayLikeToArray(o, minLen); }\n\nfunction tabs_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\nvar active_tab;\nfunction open_tab(tab_link, tab_content) {\n  var tab_contents = document.getElementsByClassName(\'tab-content\');\n\n  var _iterator = tabs_createForOfIteratorHelper(tab_contents),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var content = _step.value;\n      content.style.display = \'none\';\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var tab_links = document.getElementsByClassName(\'tab-link\');\n\n  var _iterator2 = tabs_createForOfIteratorHelper(tab_links),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var link = _step2.value;\n      link.classList.remove(\'active\');\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  document.getElementById(tab_content).style.display = \'flex\';\n  document.getElementById(tab_link).classList.add(\'active\');\n  active_tab = tab_content;\n}\n\ndocument.getElementById(\'tab-links\').onclick = function (event) {\n  var target = event.target;\n\n  if (target.classList.contains(\'tab-link\')) {\n    var tab_contents = document.getElementById(\'tab-contents\');\n    var header = document.getElementById(\'header\');\n    open_tab(target.id, target.id.replace(\'tab\', \'content\'));\n\n    if (target.classList.contains(\'collapsing\')) {\n      tab_contents.style.display = \'none\';\n      header.style.height = \'auto\';\n      switchMode(false);\n    } else {\n      tab_contents.style.display = \'\';\n      header.style.height = \'\';\n      switchMode(true);\n    }\n  }\n};\n\nfunction reflect_selection(single) {\n  var classes = getCommonClasses(single);\n  if (classes) set_term_changers(classes);else drop_term_changers();\n}\n\nvar term_changers = tabs_toConsumableArray(document.getElementsByClassName(\'term-changer\'));\n\nvar _iterator3 = tabs_createForOfIteratorHelper(term_changers),\n    _step3;\n\ntry {\n  var _loop2 = function _loop2() {\n    var elem = _step3.value;\n\n    elem.onchange = function () {\n      if (!selection_in_place()) return;\n      var name = elem.getAttribute(\'name\');\n      if (elem.getAttribute(\'type\') == \'checkbox\') change({\n        type: name,\n        value: elem.checked\n      });else change({\n        type: name,\n        value: elem.value\n      });\n    };\n  };\n\n  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n    _loop2();\n  }\n} catch (err) {\n  _iterator3.e(err);\n} finally {\n  _iterator3.f();\n}\n\nfunction drop_term_changers() {\n  document.getElementById(\'style-content\').reset();\n}\nfunction set_term_changers(classes) {\n  drop_term_changers();\n\n  var _iterator4 = tabs_createForOfIteratorHelper(classes),\n      _step4;\n\n  try {\n    var _loop = function _loop() {\n      var cls = _step4.value;\n\n      var term_changer = tabs_toConsumableArray(term_changers).filter(function (value) {\n        return value.getAttribute(\'name\') == getPrefix(cls);\n      });\n\n      if (term_changer.length == 1) {\n        if (term_changer[0].getAttribute(\'type\') == \'checkbox\') term_changer[0].checked = true;else term_changer[0].value = getPostfix(cls);\n      } else term_changer.find(function (value) {\n        return value.value == getPostfix(cls);\n      }).checked = true;\n    };\n\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n}\n;// CONCATENATED MODULE: ./scripts/main.ts\n\n\n\n\nwindow.onload = function () {\n  open_tab(\'style-tab\', \'style-content\');\n  choose_line(terminal_terminal.firstElementChild);\n};\n\ndocument.ondragstart = function (event) {\n  event.preventDefault();\n  return false;\n};\n\ndocument.ondrop = function (event) {\n  event.preventDefault();\n  return false;\n};\n\ndocument.onselectionchange = function () {\n  if (!editable || !selection_in_place()) return;\n  reflect_selection();\n};\n\ndocument.oncopy = function (event) {\n  var str = document.getSelection().toString();\n  var refined = str.replace(/\\r?\\n|\\r/g, "").replace(/\\u00a0/g, " ");\n  event.clipboardData.setData(\'text/plain\', refined);\n  event.preventDefault();\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///625\n')})()})();